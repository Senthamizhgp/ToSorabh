<?xml version="1.0" encoding="utf-8" ?>
<system>
	<!--
	Element listing all the supported devices based on their types. Each device is identified by the unique numeric value indicated by "id" attribute.
	Any number of new device configuration can be added (i.e. coinacceptor, coindispenser etc.) provided the "id" attribute is unique
	for that configuration (or element)
	-->
	<devices>
		<!--All the supported Coin Acceptor devices and their configuration-->
		<coinacceptors>
			<coinacceptor id="1000">
				<!--String description of the device, max 256 bytes-->
				<model>NRI currenza c2 coin changer</model>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_full_sensor>0</cap_full_sensor>
					<cap_near_full_sensor>0</cap_near_full_sensor>
					<cap_jam_sensor>1</cap_jam_sensor>
					<cap_pause_deposit>1</cap_pause_deposit>
					<cap_real_time_data>1</cap_real_time_data>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>1</cap_read_cash_count>
				</capabilities>
			</coinacceptor>
			<coinacceptor id="1001">
				<!--String description of the device, max 256 bytes-->
				<model>NRI EUR1 C2</model>
				<!--
				MDB device address of the device. In most cases it is equivalent to RESET command of that device. When user
				changed this address then he/she also have to change command codes under <command_code_deviations> tag.
				-->
				<port>0x08</port>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_full_sensor>1</cap_full_sensor>
					<cap_near_full_sensor>0</cap_near_full_sensor>
					<cap_jam_sensor>1</cap_jam_sensor>
					<cap_pause_deposit>1</cap_pause_deposit>
					<cap_real_time_data>1</cap_real_time_data>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>1</cap_read_cash_count>
				</capabilities>
				<version>4.2</version>
				<feature_level>2</feature_level>
				<!--
				Element listing command/response deviation to read particular property from the device. Maximum value of the "response_data_size" is limited to 64 bits.
				Procedure to read and extract required information is,
				- Send MDB command specified by "cmd" element
				- From the response buffer, extract number of bytes specified by "response_data_size" element from the offset specified by "response_data_offset" element
				- Do the logical AND with the mask specified by "response_data_mask" element to extract the required data
				-->
				<feature_decode>
					<!-- Z1 = Changer Feature Level - 1 byte -->
					<changer_level>
						<cmd>SETUP</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</changer_level>
					<!--Z2 - Z3 = Country / Currency Code - 2 bytes -->
					<country_currency_code>
						<cmd>SETUP</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFE</response_data_mask>
					</country_currency_code>
					<!-- Z4 = Coin Scaling Factor - 1 byte -->
					<scaling_factor>
						<cmd>SETUP</cmd>
						<response_data_offset>3</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</scaling_factor>
					<!-- Z5 = Decimal Places - 1 byte -->
					<decimal_places>
						<cmd>SETUP</cmd>
						<response_data_offset>4</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</decimal_places>
					<!-- Z6 - Z7 = Coin Type Routing - 2 bytes -->
					<coin_type_routing>
						<cmd>SETUP</cmd>
						<response_data_offset>5</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</coin_type_routing>
					<!-- Z8 - Z23 = Coin Type Credit - 16 bytes -->
					<coin_type_credit_0>
						<cmd>SETUP</cmd>
						<response_data_offset>7</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_0>
					<coin_type_credit_1>
						<cmd>SETUP</cmd>
						<response_data_offset>8</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_1>
					<coin_type_credit_2>
						<cmd>SETUP</cmd>
						<response_data_offset>9</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_2>
					<coin_type_credit_3>
						<cmd>SETUP</cmd>
						<response_data_offset>10</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_3>
					<coin_type_credit_4>
						<cmd>SETUP</cmd>
						<response_data_offset>11</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_4>
					<coin_type_credit_5>
						<cmd>SETUP</cmd>
						<response_data_offset>12</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_5>
					<coin_type_credit_6>
						<cmd>SETUP</cmd>
						<response_data_offset>13</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_6>
					<coin_type_credit_7>
						<cmd>SETUP</cmd>
						<response_data_offset>14</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_7>
					<coin_type_credit_8>
						<cmd>SETUP</cmd>
						<response_data_offset>15</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_8>
					<coin_type_credit_9>
						<cmd>SETUP</cmd>
						<response_data_offset>16</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_9>
					<coin_type_credit_10>
						<cmd>SETUP</cmd>
						<response_data_offset>17</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_10>
					<coin_type_credit_11>
						<cmd>SETUP</cmd>
						<response_data_offset>18</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_11>
					<coin_type_credit_12>
						<cmd>SETUP</cmd>
						<response_data_offset>19</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_12>
					<coin_type_credit_13>
						<cmd>SETUP</cmd>
						<response_data_offset>20</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_13>
					<coin_type_credit_14>
						<cmd>SETUP</cmd>
						<response_data_offset>21</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_14>
					<coin_type_credit_15>
						<cmd>SETUP</cmd>
						<response_data_offset>22</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_15>
					<!-- Z1 - Z2 = Tube Full Status - 2 bytes -->
					<tube_full_status>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</tube_full_status>
					<!-- Z3 - Z18 = Tube Status - 16 bytes -->
					<tube_status_0>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>2</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_0>
					<tube_status_1>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>3</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_1>
					<tube_status_2>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>4</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_2>
					<tube_status_3>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>5</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_3>
					<tube_status_4>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>6</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_4>
					<tube_status_5>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>7</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_5>
					<tube_status_6>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>8</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_6>
					<tube_status_7>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>9</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_7>
					<tube_status_8>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>10</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_8>
					<tube_status_9>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>11</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_9>
					<tube_status_10>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>12</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_10>
					<tube_status_11>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>13</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_11>
					<tube_status_12>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>14</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_12>
					<tube_status_13>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>15</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_13>
					<tube_status_14>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>16</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_14>
					<tube_status_15>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>17</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_15>
					<!-- Elements describing the information about deposited coins-->
					<coin_routing>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x30</response_data_mask>
					</coin_routing>
					<coin_type_deposited>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</coin_type_deposited>
					<accepted_num_of_coin_in_tube>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</accepted_num_of_coin_in_tube>
					<!-- Elements describing the information about coins dispensed manually-->
					<num_of_coins_dispensed>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x70</response_data_mask>
					</num_of_coins_dispensed>
					<coin_type_dispensed>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</coin_type_dispensed>
					<dispensed_num_of_coins_in_tube>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</dispensed_num_of_coins_in_tube>
					<!-- POLL status -->
					<poll_status>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</poll_status>
					<!-- Slug -->
					<poll_slug>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x1F</response_data_mask>
					</poll_slug>
				</feature_decode>
				<!--
				Element listing MDB command code deviations
				"code" element specifies the actual command code. For some device specific commands(i.e. describded in device.s manual or MDB standard) 
				First five bits of this code and <port> tag must be same. Lets take an example of <reset_cmd> tag shown below. In that first five bits of 
				code matched with <port> tag.
				"request_data_size" element specifies request data size, expected by the device for particular command
				"response_data_size" element specifies the response data size, expected from the device for particular command
				-->
				<command_code_deviations>
					<reset_cmd>
						<code>0x08</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</reset_cmd>
					<setup_cmd>
						<code>0x09</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>13</response_data_size>
					</setup_cmd>
					<tube_status_cmd>
						<code>0x0A</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>18</response_data_size>
					</tube_status_cmd>
					<poll_cmd>
						<code>0x0B</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>16</response_data_size>
					</poll_cmd>
					<coin_type_cmd>
						<code>0x0C</code>
						<request_data_size>4</request_data_size>
						<response_data_size>-1</response_data_size>
						<!-- 0xFF means NA -->
					</coin_type_cmd>
					<just_reset_cmd>
						<code>0x0B</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</just_reset_cmd>
				</command_code_deviations>
				<!--
				Element listing POLL response type deviations
				-->
				<poll_response_type_identification>
					<coin_deposited>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0x4000</response_data_mask>
					</coin_deposited>
					<status>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</status>
					<slug>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x20</response_data_mask>
					</slug>
					<coin_dispensed_manually>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0x8000</response_data_mask>
					</coin_dispensed_manually>
				</poll_response_type_identification>
				<!--
				POLL response status codes
				-->
				<poll_status_code>
					<escrow_request>1</escrow_request>
					<changer_payout_busy>2</changer_payout_busy>
					<no_credit>3</no_credit>
					<defective_tube_sensor>4</defective_tube_sensor>
					<double_arrival>5</double_arrival>
					<acceptor_unplugged>6</acceptor_unplugged>
					<tube_jam>7</tube_jam>
					<rom_checksum_error>8</rom_checksum_error>
					<coin_routing_error>9</coin_routing_error>
					<changer_busy>10</changer_busy>
					<changer_was_reset>11</changer_was_reset>
					<coin_jam>12</coin_jam>
					<possible_credited_coin_removal>13</possible_credited_coin_removal>
				</poll_status_code>
			</coinacceptor>
			<coinacceptor id="1002">
				<!--String description of the device, max 256 bytes-->
				<model>MEI Cashflow 7000 Series Change Manage</model>
				<!--
				MDB device address of the device. In most cases it is equivalent to RESET command of that device. When user
				changed this address then he/she also have to change command codes under <command_code_deviations> tag.
				-->
				<port>0x08</port>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_full_sensor>1</cap_full_sensor>
					<cap_near_full_sensor>0</cap_near_full_sensor>
					<cap_jam_sensor>1</cap_jam_sensor>
					<cap_pause_deposit>1</cap_pause_deposit>
					<cap_real_time_data>1</cap_real_time_data>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>1</cap_read_cash_count>
				</capabilities>
				<version>4.2</version>
				<feature_level>2</feature_level>
				<!--
				Element listing command/response deviation to read particular property from the device. Maximum value of the "response_data_size" is limited to 64 bits.
				Procedure to read and extract required information is,
				- Send MDB command specified by "cmd" element
				- From the response buffer, extract number of bytes specified by "response_data_size" element from the offset specified by "response_data_offset" element
				- Do the logical AND with the mask specified by "response_data_mask" element to extract the required data
				-->
				<feature_decode>
					<!-- Z1 = Changer Feature Level - 1 byte -->
					<changer_level>
						<cmd>SETUP</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</changer_level>
					<!-- Z2 - Z3 = Country / Currency Code - 2 bytes -->
					<country_currency_code>
						<cmd>SETUP</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFE</response_data_mask>
					</country_currency_code>
					<!-- Z4 = Coin Scaling Factor - 1 byte -->
					<scaling_factor>
						<cmd>SETUP</cmd>
						<response_data_offset>3</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</scaling_factor>
					<!-- Z5 = Decimal Places - 1 byte -->
					<decimal_places>
						<cmd>SETUP</cmd>
						<response_data_offset>4</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</decimal_places>
					<!-- Z6 - Z7 = Coin Type Routing - 2 bytes -->
					<coin_type_routing>
						<cmd>SETUP</cmd>
						<response_data_offset>5</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</coin_type_routing>
					<!-- Z8 - Z23 = Coin Type Credit - 16 bytes -->
					<coin_type_credit_0>
						<cmd>SETUP</cmd>
						<response_data_offset>7</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_0>
					<coin_type_credit_1>
						<cmd>SETUP</cmd>
						<response_data_offset>8</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_1>
					<coin_type_credit_2>
						<cmd>SETUP</cmd>
						<response_data_offset>9</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_2>
					<coin_type_credit_3>
						<cmd>SETUP</cmd>
						<response_data_offset>10</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_3>
					<coin_type_credit_4>
						<cmd>SETUP</cmd>
						<response_data_offset>11</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_4>
					<coin_type_credit_5>
						<cmd>SETUP</cmd>
						<response_data_offset>12</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_5>
					<coin_type_credit_6>
						<cmd>SETUP</cmd>
						<response_data_offset>13</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_6>
					<coin_type_credit_7>
						<cmd>SETUP</cmd>
						<response_data_offset>14</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_7>
					<coin_type_credit_8>
						<cmd>SETUP</cmd>
						<response_data_offset>15</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_8>
					<coin_type_credit_9>
						<cmd>SETUP</cmd>
						<response_data_offset>16</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_9>
					<coin_type_credit_10>
						<cmd>SETUP</cmd>
						<response_data_offset>17</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_10>
					<coin_type_credit_11>
						<cmd>SETUP</cmd>
						<response_data_offset>18</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_11>
					<coin_type_credit_12>
						<cmd>SETUP</cmd>
						<response_data_offset>19</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_12>
					<coin_type_credit_13>
						<cmd>SETUP</cmd>
						<response_data_offset>20</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_13>
					<coin_type_credit_14>
						<cmd>SETUP</cmd>
						<response_data_offset>21</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_14>
					<coin_type_credit_15>
						<cmd>SETUP</cmd>
						<response_data_offset>22</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_15>
					<!-- Z1 - Z2 = Tube Full Status - 2 bytes -->
					<tube_full_status>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</tube_full_status>
					<!-- Z3 - Z18 = Tube Status - 16 bytes -->
					<tube_status_0>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>2</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_0>
					<tube_status_1>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>3</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_1>
					<tube_status_2>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>4</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_2>
					<tube_status_3>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>5</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_3>
					<tube_status_4>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>6</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_4>
					<tube_status_5>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>7</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_5>
					<tube_status_6>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>8</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_6>
					<tube_status_7>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>9</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_7>
					<tube_status_8>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>10</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_8>
					<tube_status_9>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>11</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_9>
					<tube_status_10>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>12</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_10>
					<tube_status_11>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>13</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_11>
					<tube_status_12>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>14</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_12>
					<tube_status_13>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>15</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_13>
					<tube_status_14>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>16</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_14>
					<tube_status_15>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>17</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_15>
					<!-- Elements describing the information about deposited coins-->
					<coin_routing>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x30</response_data_mask>
					</coin_routing>
					<coin_type_deposited>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</coin_type_deposited>
					<accepted_num_of_coin_in_tube>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</accepted_num_of_coin_in_tube>
					<!-- Elements describing the information about coins dispensed manually-->
					<num_of_coins_dispensed>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x70</response_data_mask>
					</num_of_coins_dispensed>
					<coin_type_dispensed>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</coin_type_dispensed>
					<dispensed_num_of_coins_in_tube>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</dispensed_num_of_coins_in_tube>
					<!-- POLL status -->
					<poll_status>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</poll_status>
					<!-- Slug -->
					<poll_slug>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x1F</response_data_mask>
					</poll_slug>
				</feature_decode>
				<!--
				Element listing MDB command code deviations
				"code" element specifies the actual command code. For some device specific commands(i.e. describded in device.s manual or MDB standard) 
				First five bits of this code and <port> tag must be same. Lets take an example of <reset_cmd> tag shown below. In that first five bits of 
				code matched with <port> tag.
				"request_data_size" element specifies request data size, expected by the device for particular command
				"response_data_size" element specifies the response data size, expected from the device for particular command
				-->
				<command_code_deviations>
					<reset_cmd>
						<code>0x08</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</reset_cmd>
					<setup_cmd>
						<code>0x09</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>23</response_data_size>
					</setup_cmd>
					<tube_status_cmd>
						<code>0x0A</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>18</response_data_size>
					</tube_status_cmd>
					<poll_cmd>
						<code>0x0B</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>16</response_data_size>
					</poll_cmd>
					<coin_type_cmd>
						<code>0x0C</code>
						<request_data_size>4</request_data_size>
						<response_data_size>-1</response_data_size>
						<!-- 0xFF means NA -->
					</coin_type_cmd>
					<just_reset_cmd>
						<code>0x0B</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</just_reset_cmd>
				</command_code_deviations>
				<!--
				Element listing POLL response type deviations
				-->
				<poll_response_type_identification>
					<coin_deposited>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0x4000</response_data_mask>
					</coin_deposited>
					<status>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</status>
					<slug>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x20</response_data_mask>
					</slug>
					<coin_dispensed_manually>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0x8000</response_data_mask>
					</coin_dispensed_manually>
				</poll_response_type_identification>
				<!--
				POLL response status codes
				-->
				<poll_status_code>
					<escrow_request>1</escrow_request>
					<changer_payout_busy>2</changer_payout_busy>
					<no_credit>3</no_credit>
					<defective_tube_sensor>4</defective_tube_sensor>
					<double_arrival>5</double_arrival>
					<acceptor_unplugged>6</acceptor_unplugged>
					<tube_jam>7</tube_jam>
					<rom_checksum_error>8</rom_checksum_error>
					<coin_routing_error>9</coin_routing_error>
					<changer_busy>10</changer_busy>
					<changer_was_reset>11</changer_was_reset>
					<coin_jam>12</coin_jam>
					<possible_credited_coin_removal>13</possible_credited_coin_removal>
				</poll_status_code>
			</coinacceptor>
			<coinacceptor id="1003">
				<!--String description of the device, max 256 bytes-->
				<model>Coges AETERNA  Coin Changer</model>
				<!--
				MDB device address of the device. In most cases it is equivalent to RESET command of that device. When user
				changed this address then he/she also have to change command codes under <command_code_deviations> tag.
				-->
				<port>0x08</port>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_full_sensor>1</cap_full_sensor>
					<cap_near_full_sensor>0</cap_near_full_sensor>
					<cap_jam_sensor>1</cap_jam_sensor>
					<cap_pause_deposit>1</cap_pause_deposit>
					<cap_real_time_data>1</cap_real_time_data>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>1</cap_read_cash_count>
				</capabilities>
				<version>4.2</version>
				<feature_level>2</feature_level>
				<!--
				Element listing command/response deviation to read particular property from the device. Maximum value of the "response_data_size" is limited to 64 bits.
				Procedure to read and extract required information is,
				- Send MDB command specified by "cmd" element
				- From the response buffer, extract number of bytes specified by "response_data_size" element from the offset specified by "response_data_offset" element
				- Do the logical AND with the mask specified by "response_data_mask" element to extract the required data
				-->
				<feature_decode>
					<!-- Z1 = Changer Feature Level - 1 byte -->
					<changer_level>
						<cmd>SETUP</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</changer_level>
					<!-- Z2 - Z3 = Country / Currency Code - 2 bytes -->
					<country_currency_code>
						<cmd>SETUP</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFE</response_data_mask>
					</country_currency_code>
					<!-- Z4 = Coin Scaling Factor - 1 byte -->
					<scaling_factor>
						<cmd>SETUP</cmd>
						<response_data_offset>3</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</scaling_factor>
					<!-- Z5 = Decimal Places - 1 byte -->
					<decimal_places>
						<cmd>SETUP</cmd>
						<response_data_offset>4</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</decimal_places>
					<!-- Z6 - Z7 = Coin Type Routing - 2 bytes -->
					<coin_type_routing>
						<cmd>SETUP</cmd>
						<response_data_offset>5</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</coin_type_routing>
					<!-- Z8 - Z23 = Coin Type Credit - 16 bytes -->
					<coin_type_credit_0>
						<cmd>SETUP</cmd>
						<response_data_offset>7</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_0>
					<coin_type_credit_1>
						<cmd>SETUP</cmd>
						<response_data_offset>8</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_1>
					<coin_type_credit_2>
						<cmd>SETUP</cmd>
						<response_data_offset>9</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_2>
					<coin_type_credit_3>
						<cmd>SETUP</cmd>
						<response_data_offset>10</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_3>
					<coin_type_credit_4>
						<cmd>SETUP</cmd>
						<response_data_offset>11</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_4>
					<coin_type_credit_5>
						<cmd>SETUP</cmd>
						<response_data_offset>12</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_5>
					<coin_type_credit_6>
						<cmd>SETUP</cmd>
						<response_data_offset>13</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_6>
					<coin_type_credit_7>
						<cmd>SETUP</cmd>
						<response_data_offset>14</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_7>
					<coin_type_credit_8>
						<cmd>SETUP</cmd>
						<response_data_offset>15</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_8>
					<coin_type_credit_9>
						<cmd>SETUP</cmd>
						<response_data_offset>16</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_9>
					<coin_type_credit_10>
						<cmd>SETUP</cmd>
						<response_data_offset>17</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_10>
					<coin_type_credit_11>
						<cmd>SETUP</cmd>
						<response_data_offset>18</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_11>
					<coin_type_credit_12>
						<cmd>SETUP</cmd>
						<response_data_offset>19</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_12>
					<coin_type_credit_13>
						<cmd>SETUP</cmd>
						<response_data_offset>20</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_13>
					<coin_type_credit_14>
						<cmd>SETUP</cmd>
						<response_data_offset>21</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_14>
					<coin_type_credit_15>
						<cmd>SETUP</cmd>
						<response_data_offset>22</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_15>
					<!-- Z1 - Z2 = Tube Full Status - 2 bytes -->
					<tube_full_status>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</tube_full_status>
					<!-- Z3 - Z18 = Tube Status - 16 bytes -->
					<tube_status_0>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>2</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_0>
					<tube_status_1>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>3</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_1>
					<tube_status_2>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>4</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_2>
					<tube_status_3>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>5</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_3>
					<tube_status_4>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>6</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_4>
					<tube_status_5>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>7</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_5>
					<tube_status_6>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>8</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_6>
					<tube_status_7>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>9</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_7>
					<tube_status_8>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>10</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_8>
					<tube_status_9>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>11</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_9>
					<tube_status_10>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>12</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_10>
					<tube_status_11>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>13</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_11>
					<tube_status_12>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>14</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_12>
					<tube_status_13>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>15</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_13>
					<tube_status_14>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>16</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_14>
					<tube_status_15>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>17</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_15>
					<!-- Elements describing the information about deposited coins-->
					<coin_routing>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x30</response_data_mask>
					</coin_routing>
					<coin_type_deposited>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</coin_type_deposited>
					<accepted_num_of_coin_in_tube>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</accepted_num_of_coin_in_tube>
					<!-- Elements describing the information about coins dispensed manually-->
					<num_of_coins_dispensed>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x70</response_data_mask>
					</num_of_coins_dispensed>
					<coin_type_dispensed>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</coin_type_dispensed>
					<dispensed_num_of_coins_in_tube>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</dispensed_num_of_coins_in_tube>
					<!-- POLL status -->
					<poll_status>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</poll_status>
					<!-- Slug -->
					<poll_slug>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x1F</response_data_mask>
					</poll_slug>
				</feature_decode>
				<!--
				Element listing MDB command code deviations
				"code" element specifies the actual command code. For some device specific commands(i.e. describded in device.s manual or MDB standard) 
				First five bits of this code and <port> tag must be same. Lets take an example of <reset_cmd> tag shown below. In that first five bits of 
				code matched with <port> tag.
				"request_data_size" element specifies request data size, expected by the device for particular command
				"response_data_size" element specifies the response data size, expected from the device for particular command
				-->
				<command_code_deviations>
					<reset_cmd>
						<code>0x08</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</reset_cmd>
					<setup_cmd>
						<code>0x09</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>23</response_data_size>
					</setup_cmd>
					<tube_status_cmd>
						<code>0x0A</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>18</response_data_size>
					</tube_status_cmd>
					<poll_cmd>
						<code>0x0B</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>16</response_data_size>
					</poll_cmd>
					<coin_type_cmd>
						<code>0x0C</code>
						<request_data_size>4</request_data_size>
						<response_data_size>-1</response_data_size>
						<!-- 0xFF means NA -->
					</coin_type_cmd>
					<just_reset_cmd>
						<code>0x0B</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</just_reset_cmd>
				</command_code_deviations>
				<!--
				Element listing POLL response type deviations
				-->
				<poll_response_type_identification>
					<coin_deposited>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0x4000</response_data_mask>
					</coin_deposited>
					<status>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</status>
					<slug>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x20</response_data_mask>
					</slug>
					<coin_dispensed_manually>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0x8000</response_data_mask>
					</coin_dispensed_manually>
				</poll_response_type_identification>
				<!--
				POLL response status codes
				-->
				<poll_status_code>
					<escrow_request>1</escrow_request>
					<changer_payout_busy>2</changer_payout_busy>
					<no_credit>3</no_credit>
					<defective_tube_sensor>4</defective_tube_sensor>
					<double_arrival>5</double_arrival>
					<acceptor_unplugged>6</acceptor_unplugged>
					<tube_jam>7</tube_jam>
					<rom_checksum_error>8</rom_checksum_error>
					<coin_routing_error>9</coin_routing_error>
					<changer_busy>10</changer_busy>
					<changer_was_reset>11</changer_was_reset>
					<coin_jam>12</coin_jam>
					<possible_credited_coin_removal>13</possible_credited_coin_removal>
				</poll_status_code>
			</coinacceptor>
			<coinacceptor id="1004">
				<!--String description of the device, max 256 bytes-->
				<model>Azkoyen Combo-T</model>
				<!--CCTALK device address of the device , any address from 2 to 255-->
				<port>0x02</port>
				<!-- 
				Algorithm used for frame validation. This element must have value from following options.
				CHK_8 - Normal 8-bit checksum validation.
				CRC_CCITT_16 - 16-bit CRC-CCITT checksum based on a polynomial of x^16+x^12+x^5+1
				CRC_ENCRYPT_16 - Encrypted 16-bit CRC checksum.
				-->
				<checksum_type>CHK_8</checksum_type>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_full_sensor>0</cap_full_sensor>
					<cap_near_full_sensor>0</cap_near_full_sensor>
					<cap_jam_sensor>0</cap_jam_sensor>
					<cap_pause_deposit>1</cap_pause_deposit>
					<cap_real_time_data>1</cap_real_time_data>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>0</cap_read_cash_count>
				</capabilities>
				<!--EU for EURO, US for USD or GB for GBP-->
				<active_currency>EU</active_currency>
				<!--Element listing sorter paths. It will configure sorter device with below configured paths to route coins-->
				<sorter_paths>
					<sorter_path id="0">
						<!-- 
						Coin position id and it must be between 1 to 16 as per ccTalk standard.
						It represents the coin value supported by device.
						For example, in this device coin position 4 points to 50 cents.
						-->
						<coin_position>4</coin_position>
						<!--
						Sorter path number and it must be between 1 to 8 as per ccTalk standard. 
						It represents the target path at which coin should be routed.
						For example, in this device 50 cents coin will be routed to path number 5(which is hopper A).
						-->
						<path_number>5</path_number>
					</sorter_path>
					<sorter_path id="1">
						<!-- 
						Coin position id and it must be between 1 to 16 as per ccTalk standard.
						It represents the coin value supported by device.
						For example, in this device coin position 5 points to 100 cents.
						-->
						<coin_position>5</coin_position>
						<!--
						Sorter path number and it must be between 1 to 8 as per ccTalk standard. 
						It represents the target path at which coin should be routed.
						For example, in this device 100 cents coin will be routed to path number 3(which is hopper B).
						-->
						<path_number>3</path_number>
					</sorter_path>
					<sorter_path id="2">
						<!-- 
						Coin position id and it must be between 1 to 16 as per ccTalk standard.
						It represents the coin value supported by device.
						For example, in this device coin position 1 points to 5 cents.
						-->
						<coin_position>1</coin_position>
						<!--
						Sorter path number and it must be between 1 to 8 as per ccTalk standard. 
						It represents the target path at which coin should be routed.
						For example, in this device 5 cents coin will be routed to path number 2(which is hopper C).
						-->
						<path_number>2</path_number>
					</sorter_path>
				</sorter_paths>
				<!--
				Element listing CCTALK command code deviations.
				User will have to specify deviated code with reference to standard cctalk code.
				"actual_code" element specifies actual code of header as defined in ccTalk standard
				"deviated_code" element specifies the deviated code of header
				-->
				<!--<cmd_code_deviations>
					<cmd id="1">
						<actual_code>0x02</actual_code>
						<deviated_code>0x03</deviated_code>
					</cmd>
				</cmd_code_deviations>-->
			</coinacceptor>
			<coinacceptor id="1005">
				<!--String description of the device, max 256 bytes-->
				<model>NRI G13 MFT</model>
				<!--CCTALK device address of the device , any address from 2 to 255-->
				<port>0x02</port>
				<!-- 
				Algorithm used for frame validation. This element must have value from following options.
				CHK_8 - Normal 8-bit checksum validation.
				CRC_CCITT_16 - 16-bit CRC-CCITT checksum based on a polynomial of x^16+x^12+x^5+1
				CRC_ENCRYPT_16 - Encrypted 16-bit CRC checksum.
				-->
				<checksum_type>CHK_8</checksum_type>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_full_sensor>0</cap_full_sensor>
					<cap_near_full_sensor>0</cap_near_full_sensor>
					<cap_jam_sensor>0</cap_jam_sensor>
					<cap_pause_deposit>1</cap_pause_deposit>
					<cap_real_time_data>1</cap_real_time_data>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>0</cap_read_cash_count>
				</capabilities>
				<!--EU for EURO, US for USD or GB for GBP-->
				<active_currency>EU</active_currency>
			</coinacceptor>
			<coinacceptor id="1006">
				<!--String description of the device, max 256 bytes-->
				<model>Guardian 6000 Coin Mechanism</model>
				<!-- device address of the device , Not used for protocolA -->
				<port>0x01</port>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_full_sensor>0</cap_full_sensor>
					<cap_near_full_sensor>0</cap_near_full_sensor>
					<cap_jam_sensor>0</cap_jam_sensor>
					<cap_pause_deposit>1</cap_pause_deposit>
					<cap_real_time_data>1</cap_real_time_data>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>0</cap_read_cash_count>
				</capabilities>
			</coinacceptor>
			<coinacceptor id="1007">
				<!--String description of the device, max 256 bytes-->
				<model>NRI GBP1 C2</model>
				<!-- device address of the device , Not used for protocolA -->
				<port>0x01</port>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_full_sensor>0</cap_full_sensor>
					<cap_near_full_sensor>0</cap_near_full_sensor>
					<cap_jam_sensor>0</cap_jam_sensor>
					<cap_pause_deposit>1</cap_pause_deposit>
					<cap_real_time_data>1</cap_real_time_data>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>0</cap_read_cash_count>
				</capabilities>
			</coinacceptor>
			<coinacceptor id="1008">
				<!--String description of the device, max 256 bytes-->
				<model>Comestergroup RM5 HD</model>
				<!--CCTALK device address of the device , any address from 2 to 255-->
				<port>0x02</port>
				<!-- 
				Algorithm used for frame validation. This element must have value from following options.
				CHK_8 - Normal 8-bit checksum validation.
				CRC_CCITT_16 - 16-bit CRC-CCITT checksum based on a polynomial of x^16+x^12+x^5+1
				CRC_ENCRYPT_16 - Encrypted 16-bit CRC checksum.
				-->
				<checksum_type>CHK_8</checksum_type>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_full_sensor>0</cap_full_sensor>
					<cap_near_full_sensor>0</cap_near_full_sensor>
					<cap_jam_sensor>0</cap_jam_sensor>
					<cap_pause_deposit>1</cap_pause_deposit>
					<cap_real_time_data>1</cap_real_time_data>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>0</cap_read_cash_count>
				</capabilities>
				<!--EU for EURO, US for USD or GB for GBP-->
				<active_currency>EU</active_currency>
			</coinacceptor>
		</coinacceptors>
		<!--All the supported Coin Dispenser devices and their configuration-->
		<coindispensers>
			<coindispenser id="1100">
				<!--String description of the device, max 256 bytes-->
				<model>NRI currenza c2 coin changer</model>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_empty_sensor>0</cap_empty_sensor>
					<cap_near_empty_sensor>0</cap_near_empty_sensor>
					<cap_jam_sensor>1</cap_jam_sensor>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>1</cap_read_cash_count>
				</capabilities>
				<dispenser_type>COIN_CHANGER</dispenser_type>
			</coindispenser>
			<coindispenser id="1101">
				<!--String description of the device, max 256 bytes-->
				<model>NRI EUR1 C2</model>
				<!--
				MDB device address of the device. In most cases it is equivalent to RESET command of that device. When user
				changed this address then he/she also have to change command codes under <command_code_deviations> tag.
				-->
				<port>0x08</port>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_empty_sensor>1</cap_empty_sensor>
					<cap_near_empty_sensor>0</cap_near_empty_sensor>
					<cap_jam_sensor>1</cap_jam_sensor>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>1</cap_read_cash_count>
				</capabilities>
				<version>4.2</version>
				<feature_level>2</feature_level>
				<dispenser_type>COIN_CHANGER</dispenser_type>
				<!--
				Element listing command/response deviation to read particular property from the device. Maximum value of the "response_data_size" is limited to 64 bits.
				Procedure to read and extract required information is,
				- Send MDB command specified by "cmd" element
				- From the response buffer, extract number of bytes specified by "response_data_size" element from the offset specified by "response_data_offset" element
				- Do the logical AND with the mask specified by "response_data_mask" element to extract the required data
				-->
				<feature_decode>
					<!-- Z1 = Changer Feature Level - 1 byte -->
					<changer_level>
						<cmd>SETUP</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</changer_level>
					<!-- Z2 - Z3 = Country / Currency Code - 2 bytes -->
					<country_currency_code>
						<cmd>SETUP</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFE</response_data_mask>
					</country_currency_code>
					<!-- Z4 = Coin Scaling Factor - 1 byte -->
					<scaling_factor>
						<cmd>SETUP</cmd>
						<response_data_offset>3</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</scaling_factor>
					<!-- Z5 = Decimal Places - 1 byte -->
					<decimal_places>
						<cmd>SETUP</cmd>
						<response_data_offset>4</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</decimal_places>
					<!-- Z6 - Z7 = Coin Type Routing - 2 bytes -->
					<coin_type_routing>
						<cmd>SETUP</cmd>
						<response_data_offset>5</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</coin_type_routing>
					<!-- Z8 - Z23 = Coin Type Credit - 16 bytes -->
					<coin_type_credit_0>
						<cmd>SETUP</cmd>
						<response_data_offset>7</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_0>
					<coin_type_credit_1>
						<cmd>SETUP</cmd>
						<response_data_offset>8</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_1>
					<coin_type_credit_2>
						<cmd>SETUP</cmd>
						<response_data_offset>9</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_2>
					<coin_type_credit_3>
						<cmd>SETUP</cmd>
						<response_data_offset>10</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_3>
					<coin_type_credit_4>
						<cmd>SETUP</cmd>
						<response_data_offset>11</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_4>
					<coin_type_credit_5>
						<cmd>SETUP</cmd>
						<response_data_offset>12</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_5>
					<coin_type_credit_6>
						<cmd>SETUP</cmd>
						<response_data_offset>13</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_6>
					<coin_type_credit_7>
						<cmd>SETUP</cmd>
						<response_data_offset>14</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_7>
					<coin_type_credit_8>
						<cmd>SETUP</cmd>
						<response_data_offset>15</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_8>
					<coin_type_credit_9>
						<cmd>SETUP</cmd>
						<response_data_offset>16</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_9>
					<coin_type_credit_10>
						<cmd>SETUP</cmd>
						<response_data_offset>17</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_10>
					<coin_type_credit_11>
						<cmd>SETUP</cmd>
						<response_data_offset>18</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_11>
					<coin_type_credit_12>
						<cmd>SETUP</cmd>
						<response_data_offset>19</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_12>
					<coin_type_credit_13>
						<cmd>SETUP</cmd>
						<response_data_offset>20</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_13>
					<coin_type_credit_14>
						<cmd>SETUP</cmd>
						<response_data_offset>21</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_14>
					<coin_type_credit_15>
						<cmd>SETUP</cmd>
						<response_data_offset>22</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_15>
					<!-- Z1 - Z2 = Tube Full Status - 2 bytes -->
					<tube_full_status>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</tube_full_status>
					<!-- Z3 - Z18 = Tube Status - 16 bytes -->
					<tube_status_0>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>2</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_0>
					<tube_status_1>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>3</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_1>
					<tube_status_2>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>4</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_2>
					<tube_status_3>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>5</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_3>
					<tube_status_4>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>6</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_4>
					<tube_status_5>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>7</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_5>
					<tube_status_6>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>8</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_6>
					<tube_status_7>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>9</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_7>
					<tube_status_8>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>10</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_8>
					<tube_status_9>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>11</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_9>
					<tube_status_10>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>12</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_10>
					<tube_status_11>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>13</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_11>
					<tube_status_12>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>14</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_12>
					<tube_status_13>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>15</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_13>
					<tube_status_14>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>16</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_14>
					<tube_status_15>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>17</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_15>
					<!-- Elements describing the information about deposited coins-->
					<coin_routing>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x30</response_data_mask>
					</coin_routing>
					<coin_type_deposited>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</coin_type_deposited>
					<accepted_num_of_coin_in_tube>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</accepted_num_of_coin_in_tube>
					<!-- Elements describing the information about coins dispensed manually-->
					<num_of_coins_dispensed>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x70</response_data_mask>
					</num_of_coins_dispensed>
					<coin_type_dispensed>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</coin_type_dispensed>
					<dispensed_num_of_coins_in_tube>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</dispensed_num_of_coins_in_tube>
					<!--POLL Status -->
					<poll_status>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</poll_status>
					<!-- Slug -->
					<poll_slug>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x1F</response_data_mask>
					</poll_slug>
				</feature_decode>
				<!--
				Element listing MDB command code deviations
				"code" element specifies the actual command code. For some device specific commands(i.e. describded in device.s manual or MDB standard) 
				First five bits of this code and <port> tag must be same. Lets take an example of <reset_cmd> tag shown below. In that first five bits of 
				code matched with <port> tag.
				"request_data_size" element specifies request data size, expected by the device for particular command
				"response_data_size" element specifies the response data size, expected from the device for particular command
				-->
				<command_code_deviations>
					<reset_cmd>
						<code>0x08</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</reset_cmd>
					<setup_cmd>
						<code>0x09</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>13</response_data_size>
					</setup_cmd>
					<tube_status_cmd>
						<code>0x0A</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>18</response_data_size>
					</tube_status_cmd>
					<dispense_cmd>
						<code>0x0D</code>
						<request_data_size>1</request_data_size>
						<response_data_size>-1</response_data_size>
					</dispense_cmd>
					<poll_cmd>
						<code>0x0B</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>16</response_data_size>
					</poll_cmd>
					<coin_type_cmd>
						<code>0x0C</code>
						<request_data_size>4</request_data_size>
						<response_data_size>-1</response_data_size>
						<!-- 0xFF means NA -->
					</coin_type_cmd>
					<just_reset_cmd>
						<code>0x0B</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</just_reset_cmd>
				</command_code_deviations>
				<!--
				Element listing POLL response type deviations
				-->
				<poll_response_type_identification>
					<coin_deposited>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0x4000</response_data_mask>
					</coin_deposited>
					<status>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</status>
					<slug>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x20</response_data_mask>
					</slug>
					<coin_dispensed_manually>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0x8000</response_data_mask>
					</coin_dispensed_manually>
				</poll_response_type_identification>
				<!--
				POLL response status codes
				-->
				<poll_status_code>
					<escrow_request>1</escrow_request>
					<changer_payout_busy>2</changer_payout_busy>
					<no_credit>3</no_credit>
					<defective_tube_sensor>4</defective_tube_sensor>
					<double_arrival>5</double_arrival>
					<acceptor_unplugged>6</acceptor_unplugged>
					<tube_jam>7</tube_jam>
					<rom_checksum_error>8</rom_checksum_error>
					<coin_routing_error>9</coin_routing_error>
					<changer_busy>10</changer_busy>
					<changer_was_reset>11</changer_was_reset>
					<coin_jam>12</coin_jam>
					<possible_credited_coin_removal>13</possible_credited_coin_removal>
				</poll_status_code>
			</coindispenser>
			<coindispenser id="1102">
				<!--String description of the device, max 256 bytes-->
				<model>MEI CF 7000 Coin Changer</model>
				<!--
				MDB device address of the device. In most cases it is equivalent to RESET command of that device. When user
				changed this address then he/she also have to change command codes under <command_code_deviations> tag.
				-->
				<port>0x08</port>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_empty_sensor>1</cap_empty_sensor>
					<cap_near_empty_sensor>0</cap_near_empty_sensor>
					<cap_jam_sensor>1</cap_jam_sensor>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>1</cap_read_cash_count>
				</capabilities>
				<version>4.2</version>
				<feature_level>2</feature_level>
				<dispenser_type>COIN_CHANGER</dispenser_type>
				<!--
				Element listing command/response deviation to read particular property from the device. Maximum value of the "response_data_size" is limited to 64 bits.
				Procedure to read and extract required information is,
				- Send MDB command specified by "cmd" element
				- From the response buffer, extract number of bytes specified by "response_data_size" element from the offset specified by "response_data_offset" element
				- Do the logical AND with the mask specified by "response_data_mask" element to extract the required data
				-->
				<feature_decode>
					<!-- Z1 = Changer Feature Level - 1 byte -->
					<changer_level>
						<cmd>SETUP</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</changer_level>
					<!-- Z2 - Z3 = Country / Currency Code - 2 bytes -->
					<country_currency_code>
						<cmd>SETUP</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFE</response_data_mask>
					</country_currency_code>
					<!-- Z4 = Coin Scaling Factor - 1 byte -->
					<scaling_factor>
						<cmd>SETUP</cmd>
						<response_data_offset>3</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</scaling_factor>
					<!-- Z5 = Decimal Places - 1 byte -->
					<decimal_places>
						<cmd>SETUP</cmd>
						<response_data_offset>4</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</decimal_places>
					<!-- Z6 - Z7 = Coin Type Routing - 2 bytes -->
					<coin_type_routing>
						<cmd>SETUP</cmd>
						<response_data_offset>5</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</coin_type_routing>
					<!-- Z8 - Z23 = Coin Type Credit - 16 bytes -->
					<coin_type_credit_0>
						<cmd>SETUP</cmd>
						<response_data_offset>7</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_0>
					<coin_type_credit_1>
						<cmd>SETUP</cmd>
						<response_data_offset>8</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_1>
					<coin_type_credit_2>
						<cmd>SETUP</cmd>
						<response_data_offset>9</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_2>
					<coin_type_credit_3>
						<cmd>SETUP</cmd>
						<response_data_offset>10</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_3>
					<coin_type_credit_4>
						<cmd>SETUP</cmd>
						<response_data_offset>11</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_4>
					<coin_type_credit_5>
						<cmd>SETUP</cmd>
						<response_data_offset>12</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_5>
					<coin_type_credit_6>
						<cmd>SETUP</cmd>
						<response_data_offset>13</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_6>
					<coin_type_credit_7>
						<cmd>SETUP</cmd>
						<response_data_offset>14</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_7>
					<coin_type_credit_8>
						<cmd>SETUP</cmd>
						<response_data_offset>15</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_8>
					<coin_type_credit_9>
						<cmd>SETUP</cmd>
						<response_data_offset>16</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_9>
					<coin_type_credit_10>
						<cmd>SETUP</cmd>
						<response_data_offset>17</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_10>
					<coin_type_credit_11>
						<cmd>SETUP</cmd>
						<response_data_offset>18</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_11>
					<coin_type_credit_12>
						<cmd>SETUP</cmd>
						<response_data_offset>19</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_12>
					<coin_type_credit_13>
						<cmd>SETUP</cmd>
						<response_data_offset>20</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_13>
					<coin_type_credit_14>
						<cmd>SETUP</cmd>
						<response_data_offset>21</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_14>
					<coin_type_credit_15>
						<cmd>SETUP</cmd>
						<response_data_offset>22</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_15>
					<!-- Z1 - Z2 = Tube Full Status - 2 bytes -->
					<tube_full_status>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</tube_full_status>
					<!-- Z3 - Z18 = Tube Status - 16 bytes -->
					<tube_status_0>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>2</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_0>
					<tube_status_1>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>3</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_1>
					<tube_status_2>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>4</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_2>
					<tube_status_3>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>5</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_3>
					<tube_status_4>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>6</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_4>
					<tube_status_5>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>7</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_5>
					<tube_status_6>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>8</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_6>
					<tube_status_7>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>9</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_7>
					<tube_status_8>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>10</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_8>
					<tube_status_9>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>11</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_9>
					<tube_status_10>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>12</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_10>
					<tube_status_11>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>13</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_11>
					<tube_status_12>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>14</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_12>
					<tube_status_13>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>15</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_13>
					<tube_status_14>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>16</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_14>
					<tube_status_15>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>17</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_15>
					<!-- Elements describing the information about deposited coins-->
					<coin_routing>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x30</response_data_mask>
					</coin_routing>
					<coin_type_deposited>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</coin_type_deposited>
					<accepted_num_of_coin_in_tube>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</accepted_num_of_coin_in_tube>
					<!-- Elements describing the information about coins dispensed manually-->
					<num_of_coins_dispensed>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x70</response_data_mask>
					</num_of_coins_dispensed>
					<coin_type_dispensed>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</coin_type_dispensed>
					<dispensed_num_of_coins_in_tube>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</dispensed_num_of_coins_in_tube>
					<!--POLL Status -->
					<poll_status>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</poll_status>
					<!-- Slug -->
					<poll_slug>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x1F</response_data_mask>
					</poll_slug>
				</feature_decode>
				<!--
				Element listing MDB command code deviations
				"code" element specifies the actual command code. For some device specific commands(i.e. describded in device.s manual or MDB standard) 
				First five bits of this code and <port> tag must be same. Lets take an example of <reset_cmd> tag shown below. In that first five bits of 
				code matched with <port> tag.
				"request_data_size" element specifies request data size, expected by the device for particular command
				"response_data_size" element specifies the response data size, expected from the device for particular command
				-->
				<command_code_deviations>
					<reset_cmd>
						<code>0x08</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</reset_cmd>
					<setup_cmd>
						<code>0x09</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>23</response_data_size>
					</setup_cmd>
					<tube_status_cmd>
						<code>0x0A</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>18</response_data_size>
					</tube_status_cmd>
					<dispense_cmd>
						<code>0x0D</code>
						<request_data_size>1</request_data_size>
						<response_data_size>-1</response_data_size>
					</dispense_cmd>
					<poll_cmd>
						<code>0x0B</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>16</response_data_size>
					</poll_cmd>
					<coin_type_cmd>
						<code>0x0C</code>
						<request_data_size>4</request_data_size>
						<response_data_size>-1</response_data_size>
						<!-- 0xFF means NA -->
					</coin_type_cmd>
					<just_reset_cmd>
						<code>0x0B</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</just_reset_cmd>
				</command_code_deviations>
				<!--
				Element listing POLL response type deviations
				-->
				<poll_response_type_identification>
					<coin_deposited>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0x4000</response_data_mask>
					</coin_deposited>
					<status>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</status>
					<slug>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x20</response_data_mask>
					</slug>
					<coin_dispensed_manually>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0x8000</response_data_mask>
					</coin_dispensed_manually>
				</poll_response_type_identification>
				<!--
				POLL response status codes
				-->
				<poll_status_code>
					<escrow_request>1</escrow_request>
					<changer_payout_busy>2</changer_payout_busy>
					<no_credit>3</no_credit>
					<defective_tube_sensor>4</defective_tube_sensor>
					<double_arrival>5</double_arrival>
					<acceptor_unplugged>6</acceptor_unplugged>
					<tube_jam>7</tube_jam>
					<rom_checksum_error>8</rom_checksum_error>
					<coin_routing_error>9</coin_routing_error>
					<changer_busy>10</changer_busy>
					<changer_was_reset>11</changer_was_reset>
					<coin_jam>12</coin_jam>
					<possible_credited_coin_removal>13</possible_credited_coin_removal>
				</poll_status_code>
			</coindispenser>
			<coindispenser id="1103">
				<!--String description of the device, max 256 bytes-->
				<model>Coges AETERNA  Coin Changer</model>
				<!--
				MDB device address of the device. In most cases it is equivalent to RESET command of that device. When user
				changed this address then he/she also have to change command codes under <command_code_deviations> tag.
				-->
				<port>0x08</port>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_empty_sensor>1</cap_empty_sensor>
					<cap_near_empty_sensor>0</cap_near_empty_sensor>
					<cap_jam_sensor>1</cap_jam_sensor>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>1</cap_read_cash_count>
				</capabilities>
				<version>4.2</version>
				<feature_level>2</feature_level>
				<dispenser_type>COIN_CHANGER</dispenser_type>
				<!--
				Element listing command/response deviation to read particular property from the device. Maximum value of the "response_data_size" is limited to 64 bits.
				Procedure to read and extract required information is,
				- Send MDB command specified by "cmd" element
				- From the response buffer, extract number of bytes specified by "response_data_size" element from the offset specified by "response_data_offset" element
				- Do the logical AND with the mask specified by "response_data_mask" element to extract the required data
				-->
				<feature_decode>
					<!-- Z1 = Changer Feature Level - 1 byte -->
					<changer_level>
						<cmd>SETUP</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</changer_level>
					<!-- Z2 - Z3 = Country / Currency Code - 2 bytes -->
					<country_currency_code>
						<cmd>SETUP</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFE</response_data_mask>
					</country_currency_code>
					<!-- Z4 = Coin Scaling Factor - 1 byte -->
					<scaling_factor>
						<cmd>SETUP</cmd>
						<response_data_offset>3</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</scaling_factor>
					<!-- Z5 = Decimal Places - 1 byte -->
					<decimal_places>
						<cmd>SETUP</cmd>
						<response_data_offset>4</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</decimal_places>
					<!-- Z6 - Z7 = Coin Type Routing - 2 bytes -->
					<coin_type_routing>
						<cmd>SETUP</cmd>
						<response_data_offset>5</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</coin_type_routing>
					<!-- Z8 - Z23 = Coin Type Credit - 16 bytes -->
					<coin_type_credit_0>
						<cmd>SETUP</cmd>
						<response_data_offset>7</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_0>
					<coin_type_credit_1>
						<cmd>SETUP</cmd>
						<response_data_offset>8</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_1>
					<coin_type_credit_2>
						<cmd>SETUP</cmd>
						<response_data_offset>9</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_2>
					<coin_type_credit_3>
						<cmd>SETUP</cmd>
						<response_data_offset>10</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_3>
					<coin_type_credit_4>
						<cmd>SETUP</cmd>
						<response_data_offset>11</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_4>
					<coin_type_credit_5>
						<cmd>SETUP</cmd>
						<response_data_offset>12</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_5>
					<coin_type_credit_6>
						<cmd>SETUP</cmd>
						<response_data_offset>13</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_6>
					<coin_type_credit_7>
						<cmd>SETUP</cmd>
						<response_data_offset>14</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_7>
					<coin_type_credit_8>
						<cmd>SETUP</cmd>
						<response_data_offset>15</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_8>
					<coin_type_credit_9>
						<cmd>SETUP</cmd>
						<response_data_offset>16</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_9>
					<coin_type_credit_10>
						<cmd>SETUP</cmd>
						<response_data_offset>17</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_10>
					<coin_type_credit_11>
						<cmd>SETUP</cmd>
						<response_data_offset>18</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_11>
					<coin_type_credit_12>
						<cmd>SETUP</cmd>
						<response_data_offset>19</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_12>
					<coin_type_credit_13>
						<cmd>SETUP</cmd>
						<response_data_offset>20</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_13>
					<coin_type_credit_14>
						<cmd>SETUP</cmd>
						<response_data_offset>21</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_14>
					<coin_type_credit_15>
						<cmd>SETUP</cmd>
						<response_data_offset>22</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</coin_type_credit_15>
					<!-- Z1 - Z2 = Tube Full Status - 2 bytes -->
					<tube_full_status>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</tube_full_status>
					<!-- Z3 - Z18 = Tube Status - 16 bytes -->
					<tube_status_0>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>2</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_0>
					<tube_status_1>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>3</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_1>
					<tube_status_2>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>4</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_2>
					<tube_status_3>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>5</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_3>
					<tube_status_4>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>6</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_4>
					<tube_status_5>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>7</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_5>
					<tube_status_6>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>8</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_6>
					<tube_status_7>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>9</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_7>
					<tube_status_8>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>10</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_8>
					<tube_status_9>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>11</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_9>
					<tube_status_10>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>12</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_10>
					<tube_status_11>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>13</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_11>
					<tube_status_12>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>14</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_12>
					<tube_status_13>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>15</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_13>
					<tube_status_14>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>16</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_14>
					<tube_status_15>
						<cmd>TUBE_STATUS</cmd>
						<response_data_offset>17</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</tube_status_15>
					<!-- Elements describing the information about deposited coins-->
					<coin_routing>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x30</response_data_mask>
					</coin_routing>
					<coin_type_deposited>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</coin_type_deposited>
					<accepted_num_of_coin_in_tube>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</accepted_num_of_coin_in_tube>
					<!-- Elements describing the information about coins dispensed manually-->
					<num_of_coins_dispensed>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x70</response_data_mask>
					</num_of_coins_dispensed>
					<coin_type_dispensed>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</coin_type_dispensed>
					<dispensed_num_of_coins_in_tube>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</dispensed_num_of_coins_in_tube>
					<!--POLL Status -->
					<poll_status>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</poll_status>
					<!-- Slug-->
					<poll_slug>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x1F</response_data_mask>
					</poll_slug>
				</feature_decode>
				<!--
				Element listing MDB command code deviations
				"code" element specifies the actual command code. For some device specific commands(i.e. describded in device.s manual or MDB standard) 
				First five bits of this code and <port> tag must be same. Lets take an example of <reset_cmd> tag shown below. In that first five bits of 
				code matched with <port> tag.
				"request_data_size" element specifies request data size, expected by the device for particular command
				"response_data_size" element specifies the response data size, expected from the device for particular command
				-->
				<command_code_deviations>
					<reset_cmd>
						<code>0x08</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</reset_cmd>
					<setup_cmd>
						<code>0x09</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>23</response_data_size>
					</setup_cmd>
					<tube_status_cmd>
						<code>0x0A</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>18</response_data_size>
					</tube_status_cmd>
					<dispense_cmd>
						<code>0x0D</code>
						<request_data_size>1</request_data_size>
						<response_data_size>-1</response_data_size>
					</dispense_cmd>
					<poll_cmd>
						<code>0x0B</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>16</response_data_size>
					</poll_cmd>
					<coin_type_cmd>
						<code>0x0C</code>
						<request_data_size>4</request_data_size>
						<response_data_size>-1</response_data_size>
						<!-- 0xFF means NA -->
					</coin_type_cmd>
					<just_reset_cmd>
						<code>0x0B</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</just_reset_cmd>
				</command_code_deviations>
				<!--
				Element listing POLL response type deviations
				-->
				<poll_response_type_identification>
					<coin_deposited>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0x4000</response_data_mask>
					</coin_deposited>
					<status>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</status>
					<slug>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x20</response_data_mask>
					</slug>
					<coin_dispensed_manually>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0x8000</response_data_mask>
					</coin_dispensed_manually>
				</poll_response_type_identification>
				<!--
				POLL response status codes
				-->
				<poll_status_code>
					<escrow_request>1</escrow_request>
					<changer_payout_busy>2</changer_payout_busy>
					<no_credit>3</no_credit>
					<defective_tube_sensor>4</defective_tube_sensor>
					<double_arrival>5</double_arrival>
					<acceptor_unplugged>6</acceptor_unplugged>
					<tube_jam>7</tube_jam>
					<rom_checksum_error>8</rom_checksum_error>
					<coin_routing_error>9</coin_routing_error>
					<changer_busy>10</changer_busy>
					<changer_was_reset>11</changer_was_reset>
					<coin_jam>12</coin_jam>
					<possible_credited_coin_removal>13</possible_credited_coin_removal>
				</poll_status_code>
			</coindispenser>
			<coindispenser id="1104">
				<!--String description of the device, max 256 bytes-->
				<model>Azkoyen Combo-T</model>
				<!--CCTALK device address of the device , any address from 2 to 255-->
				<port>0x03</port>
				<!-- 
				Algorithm used for frame validation. This element must have value from following options.
				CHK_8 - Normal 8-bit checksum validation.
				CRC_CCITT_16 - 16-bit CRC-CCITT checksum based on a polynomial of x^16+x^12+x^5+1
				CRC_ENCRYPT_16 - Encrypted 16-bit CRC checksum.
				-->
				<checksum_type>CHK_8</checksum_type>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_empty_sensor>1</cap_empty_sensor>
					<cap_near_empty_sensor>0</cap_near_empty_sensor>
					<cap_jam_sensor>0</cap_jam_sensor>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>0</cap_read_cash_count>
				</capabilities>
				<dispenser_type>ACCUMULATOR_HOPPER</dispenser_type>
				<!-- Element listing Supported coin values in cents. -->
				<coin_values>
					<coin_value id="0">
						<value>50</value>
					</coin_value>
				</coin_values>
			</coindispenser>
			<coindispenser id="1105">
				<!--String description of the device, max 256 bytes-->
				<model>Azkoyen Combo-T</model>
				<!--CCTALK device address of the device , any address from 2 to 255-->
				<port>0x04</port>
				<!-- 
				Algorithm used for frame validation. This element must have value from following options.
				CHK_8 - Normal 8-bit checksum validation.
				CRC_CCITT_16 - 16-bit CRC-CCITT checksum based on a polynomial of x^16+x^12+x^5+1
				CRC_ENCRYPT_16 - Encrypted 16-bit CRC checksum.
				-->
				<checksum_type>CHK_8</checksum_type>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_empty_sensor>1</cap_empty_sensor>
					<cap_near_empty_sensor>0</cap_near_empty_sensor>
					<cap_jam_sensor>0</cap_jam_sensor>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>0</cap_read_cash_count>
				</capabilities>
				<dispenser_type>DISCRIMINATOR_HOPPER</dispenser_type>
				<!-- Element listing Supported coin values in cents. -->
				<coin_values>
					<coin_value id="0">
						<value>50</value>
					</coin_value>
					<!--<coin_value id="1">
						<value>100</value>
					</coin_value>-->
				</coin_values>
			</coindispenser>
			<coindispenser id="1106">
				<!--String description of the device, max 256 bytes-->
				<model>Azkoyen Combo-T</model>
				<!--CCTALK device address of the device , any address from 2 to 255-->
				<port>0x05</port>
				<!-- 
				Algorithm used for frame validation. This element must have value from following options.
				CHK_8 - Normal 8-bit checksum validation.
				CRC_CCITT_16 - 16-bit CRC-CCITT checksum based on a polynomial of x^16+x^12+x^5+1
				CRC_ENCRYPT_16 - Encrypted 16-bit CRC checksum.
				-->
				<checksum_type>CHK_8</checksum_type>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_empty_sensor>1</cap_empty_sensor>
					<cap_near_empty_sensor>0</cap_near_empty_sensor>
					<cap_jam_sensor>0</cap_jam_sensor>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>0</cap_read_cash_count>
				</capabilities>
				<dispenser_type>ACCUMULATOR_HOPPER</dispenser_type>
				<!-- Element listing Supported coin values in cents. -->
				<coin_values>
					<coin_value id="0">
						<value>5</value>
					</coin_value>
				</coin_values>
			</coindispenser>
			<coindispenser id="1107">
				<!--String description of the device, max 256 bytes-->
				<model>Guardian 6000 Coin Mechanism</model>
				<!-- device address of the device , Not used for protocolA -->
				<port>0x01</port>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_empty_sensor>0</cap_empty_sensor>
					<cap_near_empty_sensor>0</cap_near_empty_sensor>
					<cap_jam_sensor>0</cap_jam_sensor>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>0</cap_read_cash_count>
				</capabilities>
				<dispenser_type>COIN_CHANGER</dispenser_type>
			</coindispenser>
			<coindispenser id="1108">
				<!--String description of the device, max 256 bytes-->
				<model>NRI GBP1 C2</model>
				<!-- device address of the device , Not used for protocolA -->
				<port>0x01</port>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_empty_sensor>0</cap_empty_sensor>
					<cap_near_empty_sensor>0</cap_near_empty_sensor>
					<cap_jam_sensor>0</cap_jam_sensor>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>0</cap_read_cash_count>
				</capabilities>
				<dispenser_type>COIN_CHANGER</dispenser_type>
			</coindispenser>
			<coindispenser id="1109">
				<!--String description of the device, max 256 bytes-->
				<model>ITL SMART HOPPER</model>
				<!--CCTALK device address of the device , any address from 2 to 255-->
				<port>0x07</port>
				<!-- 
				Algorithm used for frame validation. This element must have value from following options.
				CHK_8 - Normal 8-bit checksum validation.
				CRC_CCITT_16 - 16-bit CRC-CCITT checksum based on a polynomial of x^16+x^12+x^5+1
				CRC_ENCRYPT_16 - Encrypted 16-bit CRC checksum.
				-->
				<checksum_type>CHK_8</checksum_type>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_empty_sensor>0</cap_empty_sensor>
					<cap_near_empty_sensor>0</cap_near_empty_sensor>
					<cap_jam_sensor>1</cap_jam_sensor>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>0</cap_read_cash_count>
				</capabilities>
				<dispenser_type>SMART_HOPPER</dispenser_type>
				<!-- Element listing Supported coin values in cents. -->
				<coin_values>
					<coin_value id="0">
						<value>5</value>
					</coin_value>
				</coin_values>
			</coindispenser>
		</coindispensers>
		<!--All the supported Bill Acceptor devices and their configuration-->
		<billacceptors>
			<billacceptor id="1200">
				<!--String description of the device, max 256 bytes-->
				<model>NV9 USB Bill Validator</model>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_full_sensor>1</cap_full_sensor>
					<cap_near_full_sensor>0</cap_near_full_sensor>
					<cap_jam_sensor>1</cap_jam_sensor>
					<cap_pause_deposit>1</cap_pause_deposit>
					<cap_real_time_data>1</cap_real_time_data>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>0</cap_read_cash_count>
				</capabilities>
			</billacceptor>
			<billacceptor id="1201">
				<!--String description of the device, max 256 bytes-->
				<model>CashCode SMV, MSMV Bill Validators</model>
				<!--
				MDB device address of the device. In most cases it is equivalent to RESET command of that device. When user
				changed this address then he/she also have to change command codes under <command_code_deviations> tag.
				-->
				<port>0x30</port>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_full_sensor>1</cap_full_sensor>
					<cap_near_full_sensor>0</cap_near_full_sensor>
					<cap_jam_sensor>0</cap_jam_sensor>
					<cap_pause_deposit>1</cap_pause_deposit>
					<cap_real_time_data>1</cap_real_time_data>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>0</cap_read_cash_count>
				</capabilities>
				<version>4.2</version>
				<feature_level>2</feature_level>
				<!--
				Element listing command/response deviation to read particular property from the device. Maximum value of the "response_data_size" is limited to 64 bits.
				Procedure to read and extract required information is,
				- Send MDB command specified by "cmd" element
				- From the response buffer, extract number of bytes specified by "response_data_size" element from the offset specified by "response_data_offset" element
				- Do the logical AND with the mask specified by "response_data_mask" element to extract the required data
				-->
				<feature_decode>
					<!-- Z1 = Validator Feature Level - 1 byte -->
					<changer_level>
						<cmd>SETUP</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</changer_level>
					<!-- Z2 - Z3 = Country / Currency Code - 2 bytes -->
					<country_currency_code>
						<cmd>SETUP</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFE</response_data_mask>
					</country_currency_code>
					<!-- Z4-Z5 = Bill Scaling Factor - 2 bytes -->
					<scaling_factor>
						<cmd>SETUP</cmd>
						<response_data_offset>3</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</scaling_factor>
					<!-- Z6 = Decimal Places - 1 byte -->
					<decimal_places>
						<cmd>SETUP</cmd>
						<response_data_offset>5</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</decimal_places>
					<!-- Z7-Z8 = Stacker capacity - 2 bytes -->
					<stacker_capacity>
						<cmd>SETUP</cmd>
						<response_data_offset>6</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</stacker_capacity>
					<!-- Z9-Z10 = Validator security level - 2 bytes -->
					<security_level>
						<cmd>SETUP</cmd>
						<response_data_offset>8</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</security_level>
					<!-- Z11 = Escrow support in validator - 1 byte -->
					<escrow_support>
						<cmd>SETUP</cmd>
						<response_data_offset>10</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</escrow_support>
					<bill_type_credit_0>
						<cmd>SETUP</cmd>
						<response_data_offset>11</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_0>
					<bill_type_credit_1>
						<cmd>SETUP</cmd>
						<response_data_offset>12</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_1>
					<bill_type_credit_2>
						<cmd>SETUP</cmd>
						<response_data_offset>13</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_2>
					<bill_type_credit_3>
						<cmd>SETUP</cmd>
						<response_data_offset>14</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_3>
					<bill_type_credit_4>
						<cmd>SETUP</cmd>
						<response_data_offset>15</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_4>
					<bill_type_credit_5>
						<cmd>SETUP</cmd>
						<response_data_offset>16</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_5>
					<bill_type_credit_6>
						<cmd>SETUP</cmd>
						<response_data_offset>17</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_6>
					<bill_type_credit_7>
						<cmd>SETUP</cmd>
						<response_data_offset>18</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_7>
					<bill_type_credit_8>
						<cmd>SETUP</cmd>
						<response_data_offset>19</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_8>
					<bill_type_credit_9>
						<cmd>SETUP</cmd>
						<response_data_offset>20</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_9>
					<bill_type_credit_10>
						<cmd>SETUP</cmd>
						<response_data_offset>21</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_10>
					<bill_type_credit_11>
						<cmd>SETUP</cmd>
						<response_data_offset>22</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_11>
					<bill_type_credit_12>
						<cmd>SETUP</cmd>
						<response_data_offset>23</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_12>
					<bill_type_credit_13>
						<cmd>SETUP</cmd>
						<response_data_offset>24</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_13>
					<bill_type_credit_14>
						<cmd>SETUP</cmd>
						<response_data_offset>25</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_14>
					<bill_type_credit_15>
						<cmd>SETUP</cmd>
						<response_data_offset>26</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_15>
					<!-- Elements describing the information about deposited bills-->
					<bill_routing>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x70</response_data_mask>
					</bill_routing>
					<bill_type_deposited>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</bill_type_deposited>
					<!--POLL Status -->
					<poll_status>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x7F</response_data_mask>
					</poll_status>
					<!-- Stacker -->
					<stacker_full_status>
						<cmd>STACKER</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x80</response_data_mask>
					</stacker_full_status>
				</feature_decode>
				<!--
				Element listing MDB command code deviations
				"code" element specifies the actual command code. For some device specific commands(i.e. describded in device.s manual or MDB standard) 
				First five bits of this code and <port> tag must be same. Lets take an example of <reset_cmd> tag shown below. In that first five bits of 
				code matched with <port> tag.
				"request_data_size" element specifies request data size, expected by the device for particular command
				"response_data_size" element specifies the response data size, expected from the device for particular command
				-->
				<command_code_deviations>
					<reset_cmd>
						<code>0x30</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</reset_cmd>
					<setup_cmd>
						<code>0x31</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>15</response_data_size>
					</setup_cmd>
					<security_cmd>
						<code>0x32</code>
						<request_data_size>2</request_data_size>
						<response_data_size>-1</response_data_size>
						<!-- 0xFF means NA -->
					</security_cmd>
					<poll_cmd>
						<code>0x33</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>16</response_data_size>
					</poll_cmd>
					<bill_type_cmd>
						<code>0x34</code>
						<request_data_size>4</request_data_size>
						<response_data_size>-1</response_data_size>
						<!-- 0xFF means NA -->
					</bill_type_cmd>
					<escrow_cmd>
						<code>0x35</code>
						<request_data_size>1</request_data_size>
						<response_data_size>-1</response_data_size>
						<!-- 0xFF means NA -->
					</escrow_cmd>
					<stacker_cmd>
						<code>0x36</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>2</response_data_size>
					</stacker_cmd>
					<just_reset_cmd>
						<code>0x06</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</just_reset_cmd>
				</command_code_deviations>
				<!--
				Element listing POLL response type deviations
				-->
				<poll_response_type_identification>
					<bill_deposited>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x80</response_data_mask>
					</bill_deposited>
					<status>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x7F</response_data_mask>
					</status>
				</poll_response_type_identification>
				<!--
				POLL response status codes
				-->
				<poll_status_code>
					<defective_motor>1</defective_motor>
					<sensor_problem>2</sensor_problem>
					<validator_busy>3</validator_busy>
					<rom_checksum_error>4</rom_checksum_error>
					<validator_jam>5</validator_jam>
					<validator_reset>6</validator_reset>
					<bill_removed>7</bill_removed>
					<cash_box_out_of_position>8</cash_box_out_of_position>
					<validator_disable>9</validator_disable>
					<invalid_escrow_request>10</invalid_escrow_request>
					<bill_rejected>11</bill_rejected>
					<possible_credited_bill_removal>13</possible_credited_bill_removal>
				</poll_status_code>
			</billacceptor>
			<billacceptor id="1202">
				<!--String description of the device, max 256 bytes-->
				<model>CoinCo Vantage Bill Acceptor</model>
				<!--
				MDB device address of the device. In most cases it is equivalent to RESET command of that device. When user
				changed this address then he/she also have to change command codes under <command_code_deviations> tag.
				-->
				<port>0x30</port>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_full_sensor>1</cap_full_sensor>
					<cap_near_full_sensor>0</cap_near_full_sensor>
					<cap_jam_sensor>0</cap_jam_sensor>
					<cap_pause_deposit>1</cap_pause_deposit>
					<cap_real_time_data>1</cap_real_time_data>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>0</cap_read_cash_count>
				</capabilities>
				<version>4.2</version>
				<feature_level>2</feature_level>
				<!--
				Element listing command/response deviation to read particular property from the device. Maximum value of the "response_data_size" is limited to 64 bits.
				Procedure to read and extract required information is,
				- Send MDB command specified by "cmd" element
				- From the response buffer, extract number of bytes specified by "response_data_size" element from the offset specified by "response_data_offset" element
				- Do the logical AND with the mask specified by "response_data_mask" element to extract the required data
				-->
				<feature_decode>
					<!-- Z1 = Validator Feature Level - 1 byte -->
					<changer_level>
						<cmd>SETUP</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</changer_level>
					<!-- Z2 - Z3 = Country / Currency Code - 2 bytes -->
					<country_currency_code>
						<cmd>SETUP</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFE</response_data_mask>
					</country_currency_code>
					<!-- Z4-Z5 = Bill Scaling Factor - 2 bytes -->
					<scaling_factor>
						<cmd>SETUP</cmd>
						<response_data_offset>3</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</scaling_factor>
					<!-- Z6 = Decimal Places - 1 byte -->
					<decimal_places>
						<cmd>SETUP</cmd>
						<response_data_offset>5</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</decimal_places>
					<!-- Z7-Z8 = Stacker capacity - 2 bytes -->
					<stacker_capacity>
						<cmd>SETUP</cmd>
						<response_data_offset>6</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</stacker_capacity>
					<!-- Z9-Z10 = Validator security level - 2 bytes -->
					<security_level>
						<cmd>SETUP</cmd>
						<response_data_offset>8</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</security_level>
					<!-- Z11 = Escrow support in validator - 1 byte -->
					<escrow_support>
						<cmd>SETUP</cmd>
						<response_data_offset>10</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</escrow_support>
					<bill_type_credit_0>
						<cmd>SETUP</cmd>
						<response_data_offset>11</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_0>
					<bill_type_credit_1>
						<cmd>SETUP</cmd>
						<response_data_offset>12</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_1>
					<bill_type_credit_2>
						<cmd>SETUP</cmd>
						<response_data_offset>13</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_2>
					<bill_type_credit_3>
						<cmd>SETUP</cmd>
						<response_data_offset>14</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_3>
					<bill_type_credit_4>
						<cmd>SETUP</cmd>
						<response_data_offset>15</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_4>
					<bill_type_credit_5>
						<cmd>SETUP</cmd>
						<response_data_offset>16</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_5>
					<bill_type_credit_6>
						<cmd>SETUP</cmd>
						<response_data_offset>17</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_6>
					<bill_type_credit_7>
						<cmd>SETUP</cmd>
						<response_data_offset>18</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_7>
					<bill_type_credit_8>
						<cmd>SETUP</cmd>
						<response_data_offset>19</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_8>
					<bill_type_credit_9>
						<cmd>SETUP</cmd>
						<response_data_offset>20</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_9>
					<bill_type_credit_10>
						<cmd>SETUP</cmd>
						<response_data_offset>21</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_10>
					<bill_type_credit_11>
						<cmd>SETUP</cmd>
						<response_data_offset>22</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_11>
					<bill_type_credit_12>
						<cmd>SETUP</cmd>
						<response_data_offset>23</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_12>
					<bill_type_credit_13>
						<cmd>SETUP</cmd>
						<response_data_offset>24</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_13>
					<bill_type_credit_14>
						<cmd>SETUP</cmd>
						<response_data_offset>25</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_14>
					<bill_type_credit_15>
						<cmd>SETUP</cmd>
						<response_data_offset>26</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_15>
					<!-- Elements describing the information about deposited bills-->
					<bill_routing>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x70</response_data_mask>
					</bill_routing>
					<bill_type_deposited>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</bill_type_deposited>
					<!--POLL Status -->
					<poll_status>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x7F</response_data_mask>
					</poll_status>
					<!-- Stacker -->
					<stacker_full_status>
						<cmd>STACKER</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x80</response_data_mask>
					</stacker_full_status>
				</feature_decode>
				<!--
				Element listing MDB command code deviations
				"code" element specifies the actual command code. For some device specific commands(i.e. describded in device.s manual or MDB standard) 
				First five bits of this code and <port> tag must be same. Lets take an example of <reset_cmd> tag shown below. In that first five bits of 
				code matched with <port> tag.
				"request_data_size" element specifies request data size, expected by the device for particular command
				"response_data_size" element specifies the response data size, expected from the device for particular command
				-->
				<command_code_deviations>
					<reset_cmd>
						<code>0x30</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</reset_cmd>
					<setup_cmd>
						<code>0x31</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>27</response_data_size>
					</setup_cmd>
					<security_cmd>
						<code>0x32</code>
						<request_data_size>2</request_data_size>
						<response_data_size>-1</response_data_size>
						<!-- 0xFF means NA -->
					</security_cmd>
					<poll_cmd>
						<code>0x33</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>16</response_data_size>
					</poll_cmd>
					<bill_type_cmd>
						<code>0x34</code>
						<request_data_size>4</request_data_size>
						<response_data_size>-1</response_data_size>
						<!-- 0xFF means NA -->
					</bill_type_cmd>
					<escrow_cmd>
						<code>0x35</code>
						<request_data_size>1</request_data_size>
						<response_data_size>-1</response_data_size>
						<!-- 0xFF means NA -->
					</escrow_cmd>
					<stacker_cmd>
						<code>0x36</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>2</response_data_size>
					</stacker_cmd>
					<just_reset_cmd>
						<code>0x06</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</just_reset_cmd>
				</command_code_deviations>
				<!--
				Element listing POLL response type deviations
				-->
				<poll_response_type_identification>
					<bill_deposited>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x80</response_data_mask>
					</bill_deposited>
					<status>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x7F</response_data_mask>
					</status>
				</poll_response_type_identification>
				<!--
				POLL response status codes
				-->
				<poll_status_code>
					<defective_motor>1</defective_motor>
					<sensor_problem>2</sensor_problem>
					<validator_busy>3</validator_busy>
					<rom_checksum_error>4</rom_checksum_error>
					<validator_jam>5</validator_jam>
					<validator_reset>6</validator_reset>
					<bill_removed>7</bill_removed>
					<cash_box_out_of_position>8</cash_box_out_of_position>
					<validator_disable>9</validator_disable>
					<invalid_escrow_request>10</invalid_escrow_request>
					<bill_rejected>11</bill_rejected>
					<possible_credited_bill_removal>13</possible_credited_bill_removal>
				</poll_status_code>
			</billacceptor>
			<billacceptor id="1203">
				<!--String description of the device, max 256 bytes-->
				<model>Coges MDB 300 UP stacker</model>
				<!--
				MDB device address of the device. In most cases it is equivalent to RESET command of that device. When user
				changed this address then he/she also have to change command codes under <command_code_deviations> tag.
				-->
				<port>0x30</port>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_full_sensor>1</cap_full_sensor>
					<cap_near_full_sensor>0</cap_near_full_sensor>
					<cap_jam_sensor>0</cap_jam_sensor>
					<cap_pause_deposit>1</cap_pause_deposit>
					<cap_real_time_data>1</cap_real_time_data>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>0</cap_read_cash_count>
				</capabilities>
				<version>4.2</version>
				<feature_level>2</feature_level>
				<!--
				Element listing command/response deviation to read particular property from the device. Maximum value of the "response_data_size" is limited to 64 bits.
				Procedure to read and extract required information is,
				- Send MDB command specified by "cmd" element
				- From the response buffer, extract number of bytes specified by "response_data_size" element from the offset specified by "response_data_offset" element
				- Do the logical AND with the mask specified by "response_data_mask" element to extract the required data
				-->
				<feature_decode>
					<!-- Z1 = Validator Feature Level - 1 byte -->
					<changer_level>
						<cmd>SETUP</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</changer_level>
					<!-- Z2 - Z3 = Country / Currency Code - 2 bytes -->
					<country_currency_code>
						<cmd>SETUP</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFE</response_data_mask>
					</country_currency_code>
					<!-- Z4-Z5 = Bill Scaling Factor - 2 bytes -->
					<scaling_factor>
						<cmd>SETUP</cmd>
						<response_data_offset>3</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</scaling_factor>
					<!-- Z6 = Decimal Places - 1 byte -->
					<decimal_places>
						<cmd>SETUP</cmd>
						<response_data_offset>5</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</decimal_places>
					<!-- Z7-Z8 = Stacker capacity - 2 bytes -->
					<stacker_capacity>
						<cmd>SETUP</cmd>
						<response_data_offset>6</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</stacker_capacity>
					<!-- Z9-Z10 = Validator security level - 2 bytes -->
					<security_level>
						<cmd>SETUP</cmd>
						<response_data_offset>8</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</security_level>
					<!-- Z11 = Escrow support in validator - 1 byte -->
					<escrow_support>
						<cmd>SETUP</cmd>
						<response_data_offset>10</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</escrow_support>
					<bill_type_credit_0>
						<cmd>SETUP</cmd>
						<response_data_offset>11</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_0>
					<bill_type_credit_1>
						<cmd>SETUP</cmd>
						<response_data_offset>12</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_1>
					<bill_type_credit_2>
						<cmd>SETUP</cmd>
						<response_data_offset>13</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_2>
					<bill_type_credit_3>
						<cmd>SETUP</cmd>
						<response_data_offset>14</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_3>
					<bill_type_credit_4>
						<cmd>SETUP</cmd>
						<response_data_offset>15</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_4>
					<bill_type_credit_5>
						<cmd>SETUP</cmd>
						<response_data_offset>16</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_5>
					<bill_type_credit_6>
						<cmd>SETUP</cmd>
						<response_data_offset>17</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_6>
					<bill_type_credit_7>
						<cmd>SETUP</cmd>
						<response_data_offset>18</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_7>
					<bill_type_credit_8>
						<cmd>SETUP</cmd>
						<response_data_offset>19</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_8>
					<bill_type_credit_9>
						<cmd>SETUP</cmd>
						<response_data_offset>20</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_9>
					<bill_type_credit_10>
						<cmd>SETUP</cmd>
						<response_data_offset>21</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_10>
					<bill_type_credit_11>
						<cmd>SETUP</cmd>
						<response_data_offset>22</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_11>
					<bill_type_credit_12>
						<cmd>SETUP</cmd>
						<response_data_offset>23</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_12>
					<bill_type_credit_13>
						<cmd>SETUP</cmd>
						<response_data_offset>24</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_13>
					<bill_type_credit_14>
						<cmd>SETUP</cmd>
						<response_data_offset>25</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_14>
					<bill_type_credit_15>
						<cmd>SETUP</cmd>
						<response_data_offset>26</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</bill_type_credit_15>
					<!-- Elements describing the information about deposited bills-->
					<bill_routing>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x70</response_data_mask>
					</bill_routing>
					<bill_type_deposited>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</bill_type_deposited>
					<!--POLL Status-->
					<poll_status>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x7F</response_data_mask>
					</poll_status>
					<!-- Stacker -->
					<stacker_full_status>
						<cmd>STACKER</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x80</response_data_mask>
					</stacker_full_status>
				</feature_decode>
				<!--
				Element listing MDB command code deviations
				"code" element specifies the actual command code. For some device specific commands(i.e. describded in device.s manual or MDB standard) 
				First five bits of this code and <port> tag must be same. Lets take an example of <reset_cmd> tag shown below. In that first five bits of 
				code matched with <port> tag.
				"request_data_size" element specifies request data size, expected by the device for particular command
				"response_data_size" element specifies the response data size, expected from the device for particular command
				-->
				<command_code_deviations>
					<reset_cmd>
						<code>0x30</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</reset_cmd>
					<setup_cmd>
						<code>0x31</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>27</response_data_size>
					</setup_cmd>
					<security_cmd>
						<code>0x32</code>
						<request_data_size>2</request_data_size>
						<response_data_size>-1</response_data_size>
						<!-- 0xFF means NA -->
					</security_cmd>
					<poll_cmd>
						<code>0x33</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>16</response_data_size>
					</poll_cmd>
					<bill_type_cmd>
						<code>0x34</code>
						<request_data_size>4</request_data_size>
						<response_data_size>-1</response_data_size>
						<!-- 0xFF means NA -->
					</bill_type_cmd>
					<escrow_cmd>
						<code>0x35</code>
						<request_data_size>1</request_data_size>
						<response_data_size>-1</response_data_size>
						<!-- 0xFF means NA -->
					</escrow_cmd>
					<stacker_cmd>
						<code>0x36</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>2</response_data_size>
					</stacker_cmd>
					<just_reset_cmd>
						<code>0x06</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</just_reset_cmd>
				</command_code_deviations>
				<!--
				Element listing POLL response type deviations
				-->
				<poll_response_type_identification>
					<bill_deposited>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x80</response_data_mask>
					</bill_deposited>
					<status>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x7F</response_data_mask>
					</status>
				</poll_response_type_identification>
				<!--
				POLL response status codes
				-->
				<poll_status_code>
					<defective_motor>1</defective_motor>
					<sensor_problem>2</sensor_problem>
					<validator_busy>3</validator_busy>
					<rom_checksum_error>4</rom_checksum_error>
					<validator_jam>5</validator_jam>
					<validator_reset>6</validator_reset>
					<bill_removed>7</bill_removed>
					<cash_box_out_of_position>8</cash_box_out_of_position>
					<validator_disable>9</validator_disable>
					<invalid_escrow_request>10</invalid_escrow_request>
					<bill_rejected>11</bill_rejected>
					<possible_credited_bill_removal>13</possible_credited_bill_removal>
				</poll_status_code>
			</billacceptor>
			<billacceptor id="1204">
				<!--String description of the device, max 256 bytes-->
				<model>ITL SMART Payout</model>
				<!--CCTALK device address of the device , any address from 2 to 255-->
				<port>0x28</port>
				<!-- 
				Algorithm used for frame validation. This element must have value from following options.
				CHK_8 - Normal 8-bit checksum validation.
				CRC_CCITT_16 - 16-bit CRC-CCITT checksum based on a polynomial of x^16+x^12+x^5+1
				CRC_ENCRYPT_16 - Encrypted 16-bit CRC checksum.
				-->
				<checksum_type>CHK_8</checksum_type>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_full_sensor>1</cap_full_sensor>
					<cap_near_full_sensor>0</cap_near_full_sensor>
					<cap_jam_sensor>0</cap_jam_sensor>
					<cap_pause_deposit>1</cap_pause_deposit>
					<cap_real_time_data>1</cap_real_time_data>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>0</cap_read_cash_count>
				</capabilities>
				<!--Element listing sorter paths. It will configure sorter device with below configured paths to route coins-->
				<sorter_paths>
					<sorter_path id="0">
						<!-- 
						Bill position id and it must be between 1 to 16 as per ccTalk standard.
						It represents the bill value supported by device.
						For example, in this device bill position 4 points to 50 cents.
						-->
						<bill_position>1</bill_position>
						<!--
						Sorter path number and it must be between 1 to 8 as per ccTalk standard. 
						It represents the target path at which bill should be routed.
						For example, in this device 50 cents bill will be routed to path number 5(which is hopper A).
						-->
						<path_number>0</path_number>
					</sorter_path>
					<sorter_path id="1">
						<!-- 
						Bill position id and it must be between 1 to 16 as per ccTalk standard.
						It represents the bill value supported by device.
						For example, in this device bill position 5 points to 100 cents.
						-->
						<bill_position>2</bill_position>
						<!--
						Sorter path number and it must be between 1 to 8 as per ccTalk standard. 
						It represents the target path at which bill should be routed.
						For example, in this device 100 cents bill will be routed to path number 3(which is hopper B).
						-->
						<path_number>0</path_number>
					</sorter_path>
					<sorter_path id="2">
						<!-- 
						Bill position id and it must be between 1 to 16 as per ccTalk standard.
						It represents the bill value supported by device.
						For example, in this device bill position 1 points to 5 cents.
						-->
						<bill_position>3</bill_position>
						<!--
						Sorter path number and it must be between 1 to 8 as per ccTalk standard. 
						It represents the target path at which bill should be routed.
						For example, in this device 5 cents bill will be routed to path number 2(which is hopper C).
						-->
						<path_number>0</path_number>
					</sorter_path>
					<sorter_path id="3">
						<!-- 
						Bill position id and it must be between 1 to 16 as per ccTalk standard.
						It represents the bill value supported by device.
						For example, in this device bill position 1 points to 5 cents.
						-->
						<bill_position>4</bill_position>
						<!--
						Sorter path number and it must be between 1 to 8 as per ccTalk standard. 
						It represents the target path at which bill should be routed.
						For example, in this device 5 cents bill will be routed to path number 2(which is hopper C).
						-->
						<path_number>0</path_number>
					</sorter_path>
				</sorter_paths>
				<!--
				Element listing CCTALK command code deviations.
				User will have to specify deviated code with reference to standard cctalk code.
				"actual_code" element specifies actual code of header as defined in ccTalk standard
				"deviated_code" element specifies the deviated code of header
				-->
				<!--<cmd_code_deviations>
					<cmd id="1">
						<actual_code>0x02</actual_code>
						<deviated_code>0x03</deviated_code>
					</cmd>
				</cmd_code_deviations>-->
			</billacceptor>
			<billacceptor id="1205">
				<!--String description of the device, max 256 bytes-->
				<model>NV200 Bill Acceptor</model>
				<!--CCTALK device address of the device , any address from 2 to 255-->
				<port>0x28</port>
				<!-- 
				Algorithm used for frame validation. This element must have value from following options.
				CHK_8 - Normal 8-bit checksum validation.
				CRC_CCITT_16 - 16-bit CRC-CCITT checksum based on a polynomial of x^16+x^12+x^5+1
				CRC_ENCRYPT_16 - Encrypted 16-bit CRC checksum.
				-->
				<checksum_type>CHK_8</checksum_type>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_full_sensor>1</cap_full_sensor>
					<cap_near_full_sensor>0</cap_near_full_sensor>
					<cap_jam_sensor>0</cap_jam_sensor>
					<cap_pause_deposit>1</cap_pause_deposit>
					<cap_real_time_data>1</cap_real_time_data>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>0</cap_read_cash_count>
				</capabilities>
				<!--Element listing sorter paths. It will configure sorter device with below configured paths to route coins-->
				<sorter_paths>
					<sorter_path id="0">
						<!-- 
						Bill position id and it must be between 1 to 16 as per ccTalk standard.
						It represents the bill value supported by device.
						For example, in this device bill position 4 points to 50 cents.
						-->
						<bill_position>1</bill_position>
						<!--
						Sorter path number and it must be between 1 to 8 as per ccTalk standard. 
						It represents the target path at which bill should be routed.
						For example, in this device 50 cents bill will be routed to path number 5(which is hopper A).
						-->
						<path_number>1</path_number>
					</sorter_path>
					<sorter_path id="1">
						<!-- 
						Bill position id and it must be between 1 to 16 as per ccTalk standard.
						It represents the bill value supported by device.
						For example, in this device bill position 5 points to 100 cents.
						-->
						<bill_position>2</bill_position>
						<!--
						Sorter path number and it must be between 1 to 8 as per ccTalk standard. 
						It represents the target path at which bill should be routed.
						For example, in this device 100 cents bill will be routed to path number 3(which is hopper B).
						-->
						<path_number>1</path_number>
					</sorter_path>
					<sorter_path id="2">
						<!-- 
						Bill position id and it must be between 1 to 16 as per ccTalk standard.
						It represents the bill value supported by device.
						For example, in this device bill position 1 points to 5 cents.
						-->
						<bill_position>3</bill_position>
						<!--
						Sorter path number and it must be between 1 to 8 as per ccTalk standard. 
						It represents the target path at which bill should be routed.
						For example, in this device 5 cents bill will be routed to path number 2(which is hopper C).
						-->
						<path_number>1</path_number>
					</sorter_path>
					<sorter_path id="3">
						<!-- 
						Bill position id and it must be between 1 to 16 as per ccTalk standard.
						It represents the bill value supported by device.
						For example, in this device bill position 1 points to 5 cents.
						-->
						<bill_position>4</bill_position>
						<!--
						Sorter path number and it must be between 1 to 8 as per ccTalk standard. 
						It represents the target path at which bill should be routed.
						For example, in this device 5 cents bill will be routed to path number 2(which is hopper C).
						-->
						<path_number>1</path_number>
					</sorter_path>
				</sorter_paths>
				<!--
				Element listing CCTALK command code deviations.
				User will have to specify deviated code with reference to standard cctalk code.
				"actual_code" element specifies actual code of header as defined in ccTalk standard
				"deviated_code" element specifies the deviated code of header
				-->
				<!--<cmd_code_deviations>
					<cmd id="1">
						<actual_code>0x02</actual_code>
						<deviated_code>0x03</deviated_code>
					</cmd>
				</cmd_code_deviations>-->
			</billacceptor>
		</billacceptors>
		<!--All the supported Item Dispenser devices and their configuration-->
		<itemdispensers>
			<itemdispenser id="1300">
				<!--String description of the device, max 256 bytes-->
				<model>Item Dispenser</model>
				<!--
				MDB device address of the device. In most cases it is equivalent to RESET command of that device. When user
				changed this address then he/she also have to change command codes under <command_code_deviations> tag.
				-->
				<port>0x40</port>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_empty_sensor>0</cap_empty_sensor>
					<cap_near_empty_sensor>0</cap_near_empty_sensor>
					<cap_jam_sensor>0</cap_jam_sensor>
					<cap_individual_slot_status>0</cap_individual_slot_status>
				</capabilities>
				<!--
				Element listing MDB command code deviations
				"code" element specifies the actual command code
				"request_data_size" element specifies request data size, expected by the device for particular command
				"response_data_size" element specifies the response data size, expected from the device for particular command
				-->
				<feature_decode>
					<vmc_feature_level>
						<cmd>SETUP</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</vmc_feature_level>
					<scaling_factor>
						<cmd>SETUP</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</scaling_factor>
					<decimal_places>
						<cmd>SETUP</cmd>
						<response_data_offset>3</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</decimal_places>
					<vmc_max_response_time>
						<cmd>SETUP</cmd>
						<response_data_offset>4</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</vmc_max_response_time>
					<vend_or_home_fail_item_number>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</vend_or_home_fail_item_number>
					<vend_or_home_failure>
						<cmd>POLL</cmd>
						<response_data_offset>3</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</vend_or_home_failure>
					<usd_feautre_level>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_feautre_level>
					<usd_max_price>
						<cmd>POLL</cmd>
						<response_data_offset>2</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</usd_max_price>
					<usd_item_number>
						<cmd>POLL</cmd>
						<response_data_offset>4</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</usd_item_number>
					<usd_max_resp_time>
						<cmd>POLL</cmd>
						<response_data_offset>6</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_max_resp_time>
					<usd_failure>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</usd_failure>
					<manufacturer_id_code>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>3</response_data_size>
						<response_data_mask>0xFFFFFF</response_data_mask>
					</manufacturer_id_code>
					<usd_serial_number_0>
						<cmd>POLL</cmd>
						<response_data_offset>4</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_serial_number_0>
					<usd_serial_number_1>
						<cmd>POLL</cmd>
						<response_data_offset>5</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_serial_number_1>
					<usd_serial_number_2>
						<cmd>POLL</cmd>
						<response_data_offset>6</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_serial_number_2>
					<usd_serial_number_3>
						<cmd>POLL</cmd>
						<response_data_offset>7</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_serial_number_3>
					<usd_serial_number_4>
						<cmd>POLL</cmd>
						<response_data_offset>8</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_serial_number_4>
					<usd_serial_number_5>
						<cmd>POLL</cmd>
						<response_data_offset>9</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_serial_number_5>
					<usd_serial_number_6>
						<cmd>POLL</cmd>
						<response_data_offset>10</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_serial_number_6>
					<usd_serial_number_7>
						<cmd>POLL</cmd>
						<response_data_offset>11</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_serial_number_7>
					<usd_serial_number_8>
						<cmd>POLL</cmd>
						<response_data_offset>12</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_serial_number_8>
					<usd_serial_number_9>
						<cmd>POLL</cmd>
						<response_data_offset>13</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_serial_number_9>
					<usd_serial_number_10>
						<cmd>POLL</cmd>
						<response_data_offset>14</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_serial_number_10>
					<usd_serial_number_11>
						<cmd>POLL</cmd>
						<response_data_offset>15</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_serial_number_11>
					<usd_model_number_0>
						<cmd>POLL</cmd>
						<response_data_offset>16</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_model_number_0>
					<usd_model_number_1>
						<cmd>POLL</cmd>
						<response_data_offset>17</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_model_number_1>
					<usd_model_number_2>
						<cmd>POLL</cmd>
						<response_data_offset>18</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_model_number_2>
					<usd_model_number_3>
						<cmd>POLL</cmd>
						<response_data_offset>19</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_model_number_3>
					<usd_model_number_4>
						<cmd>POLL</cmd>
						<response_data_offset>20</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_model_number_4>
					<usd_model_number_5>
						<cmd>POLL</cmd>
						<response_data_offset>21</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_model_number_5>
					<usd_model_number_6>
						<cmd>POLL</cmd>
						<response_data_offset>22</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_model_number_6>
					<usd_model_number_7>
						<cmd>POLL</cmd>
						<response_data_offset>23</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_model_number_7>
					<usd_model_number_8>
						<cmd>POLL</cmd>
						<response_data_offset>24</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_model_number_8>
					<usd_model_number_9>
						<cmd>POLL</cmd>
						<response_data_offset>25</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_model_number_9>
					<usd_model_number_10>
						<cmd>POLL</cmd>
						<response_data_offset>26</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_model_number_10>
					<usd_model_number_11>
						<cmd>POLL</cmd>
						<response_data_offset>27</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</usd_model_number_11>
					<usd_software_version>
						<cmd>POLL</cmd>
						<response_data_offset>28</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</usd_software_version>
					<usd_optinal_feature>
						<cmd>POLL</cmd>
						<response_data_offset>30</response_data_offset>
						<response_data_size>4</response_data_size>
						<response_data_mask>0xFFFFFFFF</response_data_mask>
					</usd_optinal_feature>
					<status_req_item_number>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</status_req_item_number>
					<status_req_failure>
						<cmd>POLL</cmd>
						<response_data_offset>3</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</status_req_failure>
				</feature_decode>
				<!--
				Element listing MDB command code deviations
				"code" element specifies the actual command code. For some device specific commands(i.e. describded in device.s manual or MDB standard) 
				First five bits of this code and <port> tag must be same. Lets take an example of <reset_cmd> tag shown below. In that first five bits of 
				code matched with <port> tag.
				"request_data_size" element specifies request data size, expected by the device for particular command
				"response_data_size" element specifies the response data size, expected from the device for particular command
				-->
				<command_code_deviations>
					<reset_cmd>
						<code>0x40</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</reset_cmd>
					<setup_cmd>
						<code>0x41</code>
						<request_data_size>5</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>7</response_data_size>
					</setup_cmd>
					<poll_cmd>
						<code>0x42</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</poll_cmd>
					<vend_cmd>
						<code>0x43</code>
						<sub_code>0x02</sub_code>
						<request_data_size>2</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</vend_cmd>
					<control_enable_cmd>
						<code>0x45</code>
						<sub_code>0x01</sub_code>
						<request_data_size>-1</request_data_size> <!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</control_enable_cmd>
					<control_disable_cmd>
						<code>0x45</code>
						<sub_code>0x00</sub_code>
						<request_data_size>-1</request_data_size> <!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</control_disable_cmd>
					<just_reset_cmd>
						<code>0x00</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</just_reset_cmd>
				</command_code_deviations>
				<!--
				Element listing item number mapping with its vend code which is defined by manufacturer.
				-->
				<items>
					<item id="1">
						<vend_code>
							<data_byte id="0">
								<value>0x00</value>
							</data_byte>
							<data_byte id="1">
								<value>0x01</value>
							</data_byte>
						</vend_code>
					</item>
					<item id="2">
						<vend_code>
							<data_byte id="0">
								<value>0x01</value>
							</data_byte>
							<data_byte id="1">
								<value>0x02</value>
							</data_byte>
						</vend_code>
					</item>
				</items>
				<initialization>
					<init_seq id="0">
						<cmd>RESET</cmd>
						<!-- 
						Element listing VMC data which will send with commad.
						Following element can have Maximum 33 bytes if sub code is defined otherwise can have 34 bytes. 
						-->
						<vmc_data>
						</vmc_data>
						<!-- 
						Element listing USD response data which will be send by USD in repsonse of command. This data will be
						used to validate response of command and determine that command has successfully executed or not.
						Following element can have Maximum 35 bytes. 
						-->
						<usd_data>
						</usd_data>
						<!-- 
						Element used to specify number of attempts to get valid response(i.e. specified by usd_data element).
						0 = only one attempt.
						1 = two attempts.
						2 = three attempts.
						-1 = 20 attempts until valid response got.
							send commad 
							if valid response(i.e.,specified by usd_data) not recieved 
							give delay specified by delay element 
							repeat above sequence for 20 times
						-->
						<retry_count>0</retry_count>
						<!-- 
						Delay between two commands. It must be in milliseconds. 
						-->
						<delay>100</delay>
					</init_seq>
					<init_seq id="1">
						<cmd>CONTROL_DISABLE</cmd>
						<vmc_data>
						</vmc_data>
						<usd_data>
						</usd_data>
						<retry_count>0</retry_count>
						<delay>100</delay>
					</init_seq>
					<init_seq id="2">
						<cmd>CONTROL_ENABLE</cmd>
						<vmc_data>
						</vmc_data>
						<usd_data>
						</usd_data>
						<retry_count>0</retry_count>
						<delay>100</delay>
					</init_seq>
					<!-- 
					If setup command is specified as below then HLAPI will perform following sequence
						send commad with vmc data
						if Ack received 
						{
							Poll device to get setup data( for around 30 seconds)
						}
						else
						{
							validate response by data (i.e.,specified by usd_data)
						}
					-->
					<init_seq id="3">
						<cmd>SETUP</cmd>
						<vmc_data>
							<data_byte id="0">
								<value>0x00</value>
							</data_byte>
							<data_byte id="1">
								<value>0x01</value>
							</data_byte>
							<data_byte id="2">
								<value>0x02</value>
							</data_byte>
							<data_byte id="3">
								<value>0x03</value>
							</data_byte>
							<data_byte id="4">
								<value>0x04</value>
							</data_byte>
						</vmc_data>
						<usd_data>
						</usd_data>
						<retry_count>0</retry_count>
						<delay>100</delay>
					</init_seq>
				</initialization>
				<!--
				Element listing POLL response type deviations
				-->
				<poll_response_type_identification>
					<usd_just_reset>
						<cmd>POLL</cmd>
						<response_data_size>1</response_data_size>
						<validation_data_offset>0</validation_data_offset>
						<validation_data_size>1</validation_data_size>
						<validation_value>0x00</validation_value>
					</usd_just_reset>
					<vend_or_home_success>
						<cmd>POLL</cmd>
						<response_data_size>1</response_data_size>
						<validation_data_offset>0</validation_data_offset>
						<validation_data_size>1</validation_data_size>
						<validation_value>0x02</validation_value>
					</vend_or_home_success>
					<vend_or_home_fail>
						<cmd>POLL</cmd>
						<response_data_size>5</response_data_size>
						<validation_data_offset>0</validation_data_offset>
						<validation_data_size>1</validation_data_size>
						<validation_value>0x03</validation_value>
					</vend_or_home_fail>
					<usd_configuration_and_setup_data>
						<cmd>POLL</cmd>
						<response_data_size>7</response_data_size>
						<validation_data_offset>0</validation_data_offset>
						<validation_data_size>1</validation_data_size>
						<validation_value>0x04</validation_value>
					</usd_configuration_and_setup_data>
					<usd_error_codes>
						<cmd>POLL</cmd>
						<response_data_size>3</response_data_size>
						<validation_data_offset>0</validation_data_offset>
						<validation_data_size>1</validation_data_size>
						<validation_value>0x06</validation_value>
					</usd_error_codes>
					<usd_peripheral_id_string>
						<cmd>POLL</cmd>
						<response_data_size>35</response_data_size>
						<validation_data_offset>0</validation_data_offset>
						<validation_data_size>1</validation_data_size>
						<validation_value>0x07</validation_value>
					</usd_peripheral_id_string>
					<usd_status_response>
						<cmd>POLL</cmd>
						<response_data_size>5</response_data_size>
						<validation_data_offset>0</validation_data_offset>
						<validation_data_size>1</validation_data_size>
						<validation_value>0x08</validation_value>
					</usd_status_response>
				</poll_response_type_identification>
				<special_commands>
					<special_command id="0">
						<code>0x47</code>
						<sub_code>0x00</sub_code>
						<!-- timeout in milliseconds -->
						<timeout>5000</timeout>
						<vmc_data>
							<data_byte id="0">
								<value>0x04</value>
							</data_byte>
						</vmc_data>
					</special_command>
				</special_commands>
			</itemdispenser>
			<itemdispenser id="1301">
				<!--String description of the device, max 256 bytes-->
				<model>Item Dispenser</model>
				<port>0x10</port>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_empty_sensor>0</cap_empty_sensor>
					<cap_near_empty_sensor>0</cap_near_empty_sensor>
					<cap_jam_sensor>0</cap_jam_sensor>
					<cap_individual_slot_status>0</cap_individual_slot_status>
				</capabilities>
			</itemdispenser>
		</itemdispensers>
		<!--All the supported Keylock devices and their configuration-->
		<keylocks>
			<keylock id="1400">
				<!--String description of the device, max 256 bytes-->
				<model>Keylock I</model>
				<!--Keylock type, "type" element must be one of the supported keylock types-->
				<type>Manual</type>
			</keylock>
		</keylocks>
		<!--All the supported Light devices and their configuration-->
		<lights>
			<light id="1500">
				<!--String description of the device, max 256 bytes-->
				<model>Lights I</model>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_alarm>0</cap_alarm>
					<cap_blink>0</cap_blink>
					<cap_color>0</cap_color>
				</capabilities>
			</light>
		</lights>
		<!--All the supported Sensors and their configuration-->
		<sensors>
			<sensor id="1600">
				<!--String description of the device, max 256 bytes-->
				<model>MAX31725 I2C temperature sensor</model>
				<!--Sensor type, "type" element must be one of the sensor types-->
				<type>Generic</type>
				<!--Sensor sub type, "gen_sensor_type" can be any string to identify actual sensor-->
				<gen_sensor_type>Temperature</gen_sensor_type>
				<!--Not in use for I2C-->
				<port>0</port>
				<!--Not in use for I2C interface-->
				<unit>celsius</unit>
				<!--I2C slave address-->
				<slave_address>0x48</slave_address>
				<!--Timeout in seconds-->
				<response_timeout>5</response_timeout>
				<!--a in linear equetion ax+b, x is reading from sensor-->
				<!--Temperature conversion of MAX31725 (Two byte value)
					         UPPER BYTE                              LOWER BYTE
					D15  D14  D13  D12  D11  D10  D9    D8   D7   D6   D5   D4   D3   D2   D1   D0
					S    2^6  2^5  2^4  2^3  2^2  2^1   2^0  2^-1 2^-2 2^-3 2^-4 2^-5 2^-6 2^-7 2^-8
					
					= 2^6 + 2^5 + 2^4 + 2^3 + 2^2 + 2^1 + 2^0 + 2^-1 + 2^-2 + 2^-3 + 2^-4 + 2^-5 + 2^-6 + 2^-7 + 2^-8
					= 2^-8 (2^14 + 2^13 + 2^12 + 2^11 + 2^10 + 2^9 + 2^8 + 2^7 + 2^6 + 2^5 + 2^4 + 2^3 + 2^2 + 2^1 + 2^0)
					= 0.00390625 (2^14 + 2^13 + 2^12 + 2^11 + 2^10 + 2^9 + 2^8 + 2^7 + 2^6 + 2^5 + 2^4 + 2^3 + 2^2 + 2^1 + 2^0)
				-->
				<conversion_coefficient>0.00390625</conversion_coefficient>
				<!--b in linear equetion ax+b, x is reading from sensor-->
				<conversion_constant>0</conversion_constant>
				<initialization>
					<i2c_init_seq id="0">
						<r_w_flag>write</r_w_flag>
						<register_address>0x01</register_address>
						<values>
							<value>0x40</value>
						</values>
						<delay>0</delay>
					</i2c_init_seq>
				</initialization>
				<read_data>
					<i2c_read_seq id="0">
						<r_w_flag>read</r_w_flag>
						<!--I2C register address-->
						<register_address>0x00</register_address>
						<response_data_mask>0xff</response_data_mask>
						<read_data_length>2</read_data_length>
						<!--In milliseconds-->
						<delay>0</delay>
					</i2c_read_seq>
				</read_data>
			</sensor>
			<sensor id="1601">
				<!--String description of the device-->
				<model>Orion Fans Brushless DC fan 24V1.7A</model>
				<!--Sensor type, "type" element must be one of the sensor types-->
				<type>Fan Speed</type>
				<!--PWM port id-->
				<port>1</port>
				<!--Measurement unit-->
				<fan_speed_measurement_unit>rpm</fan_speed_measurement_unit>
				<!--Element indicating, tachometer is supported or not-->
				<tachometer_supported>1</tachometer_supported>
				<!--Tachometer factor-->
				<tachometer_factor>30</tachometer_factor>
				<!--Tachometer response timeout in Seconds-->
				<tach_resp_timeout>5</tach_resp_timeout>
				<!--PWM frequency-->
				<frequency>25000</frequency>
				<!--FAN maximum speed in RPM-->
				<max_speed>5000</max_speed>
			</sensor>
			<sensor id="1602">
				<!--String description of the device-->
				<model>Orion Fans – Brushless DC fan 24V1.7A</model>
				<!--Sensor type, "type" element must be one of the sensor types-->
				<type>Fan Speed</type>
				<!--PWM port id-->
				<port>2</port>
				<!--Measurement unit-->
				<fan_speed_measurement_unit>rpm</fan_speed_measurement_unit>
				<!--Element indicating, tachometer is supported or not-->
				<tachometer_supported>1</tachometer_supported>
				<!--Tachometer factor-->
				<tachometer_factor>30</tachometer_factor>
				<!--Tachometer response timeout in Seconds-->
				<tach_resp_timeout>5</tach_resp_timeout>
				<!--PWM frequency-->
				<frequency>25000</frequency>
				<!--FAN maximum speed in RPM-->
				<max_speed>5000</max_speed>
			</sensor>
			<sensor id="1603">
				<!--String description of the device-->
				<model>GPI Sensor I</model>
				<!--Sensor type, "type" element must be one of the sensor types-->
				<type>Generic</type>
				<!--Sensor sub type, "gen_sensor_type" can be any string to identify actual sensor-->
				<gen_sensor_type>User defined</gen_sensor_type>
				<!--Not in use for GPIO-->
				<port>0</port>
			</sensor>
			<sensor id="1604">
				<!--String description of the device-->
				<model>GPI Sensor II</model>
				<!--Sensor type, "type" element must be one of the sensor types-->
				<type>Generic</type>
				<!--Sensor sub type, "gen_sensor_type" can be any string to identify actual sensor-->
				<gen_sensor_type>GENGPIO</gen_sensor_type>
				<!--Not in use for GPIO-->
				<port>0</port>
			</sensor>
			<sensor id="1605">
				<!--String description of the device, max 256 bytes-->
				<model>TC72-3.3MUA SPI Temperature sensor</model>
				<!--Sensor type, "type" element must be one of the sensor types-->
				<type>Generic</type>
				<!--Sensor sub type, "gen_sensor_type" can be any string to identify actual sensor-->
				<gen_sensor_type>Temperature</gen_sensor_type>
				<!--Not in use for SPI-->
				<port>0</port>
				<!--Not in use for SPI interface-->
				<unit>celsius</unit>
				<!--Timeout in seconds-->
				<response_timeout>5</response_timeout>
				<!-- initialization sequence if required -->
				<initialization>
					<spi_init_seq id="0">
						<r_w_flag>write</r_w_flag>
						<read_data_length>0</read_data_length>
						<write>
							<write_data_length>2</write_data_length>
							<data_byte id="0">
								<value>0x80</value>
							</data_byte>
							<data_byte id="1">
								<value>0x04</value>
							</data_byte>
						</write>
						<delay>0</delay>
					</spi_init_seq>
				</initialization>
				<!-- Following sequence will be followed when User application call spSensorGetValueA Api -->
				<read_data>
					<spi_read_seq id="0">
						<r_w_flag>read</r_w_flag>
						<!-- no of bytes to be read from SPI interface -->
						<read_data_length>2</read_data_length>
						<!-- data to be written on SPI interface -->
						<write>
							<!-- no of bytes to be written on SPI interface -->
							<write_data_length>1</write_data_length>
							<!-- first data byte -->
							<data_byte id="0">
								<value>0x02</value>
							</data_byte>
						</write>
						<!-- delay in milliseconds between two calls -->
						<delay>0</delay>
					</spi_read_seq>
				</read_data>
				<!-- Following sequence will be followed when User application call spSensorSetValue(only device id as an argument) Api -->
				<write_data>
					<spi_write_seq id="0">
						<r_w_flag>write</r_w_flag>
						<!-- no of bytes to be read from SPI interface. It will not in use if r_w_flag is write -->
						<read_data_length>0</read_data_length>
						<write>
							<!-- no of bytes to be written on SPI interface -->
							<write_data_length>2</write_data_length>
							<!-- first data byte -->
							<data_byte id="0">
								<value>0x00</value>
							</data_byte>
							<!-- second data byte -->
							<data_byte id="1">
								<value>0x00</value>
							</data_byte>
						</write>
						<!-- delay in milliseconds between two calls -->
						<delay>0</delay>
					</spi_write_seq>
				</write_data>
			</sensor>
			<sensor id="1606">
				<!--String description of the device, max 256 bytes-->
				<model>MAX 31820 One Wire Temperature Sensor</model>
				<!--Sensor type, "type" element must be one of the sensor types-->
				<type>Generic</type>
				<!--Sensor sub type, "gen_sensor_type" can be any string to identify actual sensor-->
				<gen_sensor_type>Temperature</gen_sensor_type>
				<!--Not in use for 1-wire-->
				<port>0</port>
				<!--Not in use for 1-wire interface-->
				<unit>celsius</unit>
				<!--
				1-Wire device class address of 8 bytes which represents unique serial number of one-wire based device.
				It must be defined in reverse byte order.
				-->
				<device_class>
					<!-- first data byte represents device category 0x 50 00 00 07 74 ba 7b 28 -->
					<data_byte id="0">
						<value>0x28</value>
					</data_byte>
					<data_byte id="1">
						<value>0x7B</value>
					</data_byte>
					<data_byte id="2">
						<value>0xBA</value>
					</data_byte>
					<data_byte id="3">
						<value>0x74</value>
					</data_byte>
					<data_byte id="4">
						<value>0x07</value>
					</data_byte>
					<data_byte id="5">
						<value>0x00</value>
					</data_byte>
					<data_byte id="6">
						<value>0x00</value>
					</data_byte>
					<!-- last data byte represents check sum -->
					<data_byte id="7">
						<value>0x50</value>
					</data_byte>
				</device_class>
				<!--Timeout in seconds-->
				<response_timeout>5</response_timeout>
				<!--Timeout in seconds. It must be zero for devices other than ibutton-->
				<search_interval>0</search_interval>
				<read_data>
					<oneWire_read_seq id="0">
						<r_w_flag>write</r_w_flag>
						<reset_flag>true</reset_flag>
						<read_data_length>0</read_data_length>
						<write>
							<append_address>false</append_address>
							<!-- no of bytes to be written on 1-wire interface -->
							<write_data_length>2</write_data_length>
							<!-- first data byte -->
							<data_byte id="0">
								<value>0xCC</value>
							</data_byte>
							<!-- second data byte -->
							<data_byte id="1">
								<value>0x44</value>
							</data_byte>
						</write>
						<!-- Delay between two commands. Must be in milliseconds -->
						<delay>600</delay>
					</oneWire_read_seq>
					<oneWire_read_seq id="1">
						<r_w_flag>write</r_w_flag>
						<reset_flag>true</reset_flag>
						<read_data_length>0</read_data_length>
						<write>
							<append_address>true</append_address>
							<!-- no of bytes to be written on 1-wire interface -->
							<write_data_length>1</write_data_length>
							<!-- first data byte -->
							<data_byte id="0">
								<value>0x55</value>
							</data_byte>
						</write>
						<delay>0</delay>
					</oneWire_read_seq>
					<oneWire_read_seq id="2">
						<r_w_flag>write</r_w_flag>
						<reset_flag>false</reset_flag>
						<read_data_length>0</read_data_length>
						<write>
							<append_address>false</append_address>
							<!-- no of bytes to be written on 1-wire interface -->
							<write_data_length>1</write_data_length>
							<!-- first data byte -->
							<data_byte id="0">
								<value>0xBE</value>
							</data_byte>
						</write>
						<delay>0</delay>
					</oneWire_read_seq>
					<oneWire_read_seq id="3">
						<r_w_flag>read</r_w_flag>
						<reset_flag>false</reset_flag>
						<read_data_length>9</read_data_length>
						<write>
							<append_address>false</append_address>
							<!-- no of bytes to be written on 1-wire interface -->
							<write_data_length>0</write_data_length>
						</write>
						<delay>0</delay>
					</oneWire_read_seq>
				</read_data>
			</sensor>
			<sensor id="1607">
				<!--String description of the device, max 256 bytes-->
				<model>PICAXE-08M iButton sensor</model>
				<!--Sensor type, "type" element must be one of the sensor types-->
				<type>Generic</type>
				<!--Sensor sub type, "gen_sensor_type" can be any string to identify actual sensor-->
				<gen_sensor_type>iButton</gen_sensor_type>
				<!--Not in use for 1-wire-->
				<port>0</port>
				<!--
				1-Wire device class address of 8 bytes which represents unique serial number of one-wire based device.
				It must be defined in reverse byte order. For example, If serial number written on i-button device is 
				3F		  01
				000015ADC1B8 
				then device class address should be defined as below,
				-->
				<device_class>
					<!-- first data byte represents device category -->
					<data_byte id="0">
						<value>0x01</value>
					</data_byte>
					<data_byte id="1">
						<value>0xB8</value>
					</data_byte>
					<data_byte id="2">
						<value>0xC1</value>
					</data_byte>
					<data_byte id="3">
						<value>0xAD</value>
					</data_byte>
					<data_byte id="4">
						<value>0x15</value>
					</data_byte>
					<data_byte id="5">
						<value>0x00</value>
					</data_byte>
					<data_byte id="6">
						<value>0x00</value>
					</data_byte>
					<!-- last data byte represents check sum -->
					<data_byte id="7">
						<value>0x3F</value>
					</data_byte>
				</device_class>
				<!--Timeout in seconds-->
				<response_timeout>5</response_timeout>
				<!--Timeout in seconds. It must be zero for devices other than ibutton and must be positive integer for ibutton-->
				<search_interval>3</search_interval>
			</sensor>
			<sensor id="1608">
				<!--String description of the device-->
				<model>Analog Voltage Sensor I</model>
				<!--Sensor type, "type" element must be one of the sensor types-->
				<type>Generic</type>
				<!--Analog voltage port id-->
				<port>1</port>
				<!--Measurement unit-->
				<voltage_measurement_unit>V</voltage_measurement_unit>
				<!--Timeout in seconds-->
				<response_timeout>5</response_timeout>
			</sensor>
			<sensor id="1611">
				<!--String description of the device-->
				<model>8-channel USB relay Module</model>
				<!--Sensor type, "type" element must be one of the sensor types-->
				<type>Generic</type>
				<!--Sensor sub type, "gen_sensor_type" can be any string to identify actual sensor-->
				<gen_sensor_type>User defined</gen_sensor_type>
			</sensor>			
			<sensor id="1613">
				<!--String description of the device, max 256 bytes-->
				<model>Local Port I2C Voltage Sensor</model>
				<!--Sensor type, "type" element must be one of the sensor types-->
				<type>Generic</type>
				<!--Sensor sub type, "gen_sensor_type" can be any string to identify actual sensor-->
				<gen_sensor_type>batteryVoltage</gen_sensor_type>
				<!--I2C slave address-->
				<slave_address>0x80</slave_address>
				<!--Timeout in seconds-->
				<response_timeout>5</response_timeout>			
				<read_data>
				  <i2c_read_seq id="0">
					<r_w_flag>read</r_w_flag>
					<!--I2C register address-->
					<register_address>0x02</register_address>
					<response_data_mask>0xff</response_data_mask>
					<!--In milliseconds-->
					<delay>0</delay>
				  </i2c_read_seq>
				</read_data>
			</sensor>
			<sensor id="1614">
			<!--String description of the device, max 256 bytes-->
			<model>Local Port I2C Voltage Sensor</model>
			<!--Sensor type, "type" element must be one of the sensor types-->
			<type>Generic</type>
			<!--Sensor sub type, "gen_sensor_type" can be any string to identify actual sensor-->
			<gen_sensor_type>loadVoltage</gen_sensor_type>
			<!--I2C slave address-->
			<slave_address>0x82</slave_address>
			<!--Timeout in seconds-->
			<response_timeout>5</response_timeout>
			<read_data>
			  <i2c_read_seq id="0">
				<r_w_flag>read</r_w_flag>
				<!--I2C register address-->
				<register_address>0x02</register_address>
				<response_data_mask>0xff</response_data_mask>
				<!--In milliseconds-->
				<delay>4</delay>
			  </i2c_read_seq>
			</read_data>
			</sensor>
			<sensor id="1615">
            <!--String description of the device, max 256 bytes-->
            <model>Local Port I2C to One Wire Sensor</model>
            <!--Sensor type, "type" element must be one of the sensor types-->
            <type>Generic</type>
            <!--Sensor sub type, "gen_sensor_type" can be any string to identify actual sensor-->
            <gen_sensor_type>temperatureExternal</gen_sensor_type>
             <unit>celsius</unit>
            <!--I2C slave address-->
            <slave_address>0x18</slave_address>
            <!--Timeout in seconds-->
            <response_timeout>5</response_timeout>
            <initialization>
              <i2c_init_seq id="0">
                <r_w_flag>write</r_w_flag>
                <register_address>0xF0</register_address>
                <delay>2</delay>
              </i2c_init_seq>
              <i2c_init_seq id="1">
                <r_w_flag>write</r_w_flag>
                <register_address>0xB4</register_address>
                <delay>100</delay>
              </i2c_init_seq>
            </initialization>
            <read_data>
              <i2c_read_seq id="0">
                        <r_w_flag>write</r_w_flag>
                        <register_address>0xA5</register_address>
                        <values>
							<value>CC</value>
						</values>
                        <delay>2</delay>
              </i2c_read_seq>
              <i2c_read_seq id="1">
                        <r_w_flag>write</r_w_flag>
                        <register_address>0xA5</register_address>
                        <values>
							<value>44</value>
						</values>
                        <delay>200</delay>
              </i2c_read_seq>
              <i2c_read_seq id="2">
                        <r_w_flag>write</r_w_flag>
                        <register_address>0xB4</register_address>
                        <delay>10</delay>
              </i2c_read_seq>
              <i2c_read_seq id="3">
                        <r_w_flag>write</r_w_flag>
                        <register_address>0xA5</register_address>
                        <values>
							<value>55</value>
						</values>
                        <delay>2</delay>
              </i2c_read_seq>

              <!-- device address -->
              <i2c_read_seq id="4">
                        <r_w_flag>write</r_w_flag>
                        <register_address>0xA5</register_address>
                        <values>
							<value>28</value>
						</values>
                        <delay>2</delay>
              </i2c_read_seq>
              <i2c_read_seq id="5">
                        <r_w_flag>write</r_w_flag>
                        <register_address>0xA5</register_address>
                        <values>
							<value>38</value>
						</values>
                        <delay>2</delay>
              </i2c_read_seq>
              <i2c_read_seq id="6">
                        <r_w_flag>write</r_w_flag>
                        <register_address>0xA5</register_address>
                        <values>
							<value>A8</value>
						</values>
                        <delay>2</delay>
              </i2c_read_seq>
              <i2c_read_seq id="7">
                        <r_w_flag>write</r_w_flag>
                        <register_address>0xA5</register_address>
                        <values>
							<value>59</value>
						</values>
                        <delay>2</delay>
              </i2c_read_seq>
              <i2c_read_seq id="8">
                        <r_w_flag>write</r_w_flag>
                        <register_address>0xA5</register_address>
                        <values>
							<value>5</value>
						</values>
                        <delay>2</delay>
              </i2c_read_seq>
              <i2c_read_seq id="9">
                        <r_w_flag>write</r_w_flag>
                        <register_address>0xA5</register_address>
                        <values>
							<value>0</value>
						</values>
                        <delay>2</delay>
              </i2c_read_seq>
              <i2c_read_seq id="10">
                        <r_w_flag>write</r_w_flag>
                        <register_address>0xA5</register_address>
                        <values>
							<value>0</value>
						</values>
                        <delay>2</delay>
              </i2c_read_seq>
              <i2c_read_seq id="11">
                        <r_w_flag>write</r_w_flag>
                        <register_address>0xA5</register_address>
                        <values>
							<value>21</value>
						</values>
                        <delay>2</delay>
              </i2c_read_seq>
              <!-- end of device address -->

              <i2c_read_seq id="12">
                        <r_w_flag>write</r_w_flag>
                        <register_address>0xA5</register_address>
                        <values>
							<value>BE</value>
						</values>
                        <delay>10</delay>
              </i2c_read_seq>
              <i2c_read_seq id="13">
                        <r_w_flag>write</r_w_flag>
                        <register_address>0x96</register_address>
                        <delay>10</delay>
              </i2c_read_seq>
              <i2c_read_seq id="14">
                        <r_w_flag>write</r_w_flag>
                        <register_address>0xE1</register_address>
                        <values>
							<value>E1</value>
						</values>
                        <delay>2</delay>
              </i2c_read_seq>
              <i2c_read_seq id="15">
                <r_w_flag>read</r_w_flag>
                <!--I2C register address-->
                <!-- <register_address>-1</register_address> -->
                <read_data_length>1</read_data_length>
                <response_data_mask>0xff</response_data_mask>
                <!--In milliseconds-->
                <delay>0</delay>
              </i2c_read_seq>
              <i2c_read_seq id="16">
                        <r_w_flag>write</r_w_flag>
                        <register_address>0x96</register_address>
                        <delay>10</delay>
              </i2c_read_seq>
              <i2c_read_seq id="17">
                        <r_w_flag>write</r_w_flag>
                        <register_address>0xE1</register_address>
                        <values>
							<value>E1</value>
						</values>
                        <delay>2</delay>
              </i2c_read_seq>
              <i2c_read_seq id="18">
                <r_w_flag>read</r_w_flag>
                <!--I2C register address-->
                <!-- <register_address>-1</register_address> -->
                <read_data_length>1</read_data_length>
                <response_data_mask>0xff</response_data_mask>
                <!--In milliseconds-->
                <delay>0</delay>
              </i2c_read_seq>
              <i2c_read_seq id="19">
						<r_w_flag>write</r_w_flag>
						<register_address>0xB4</register_address>
						<delay>100</delay>
			  </i2c_read_seq>
			  <i2c_read_seq id="20">
						<r_w_flag>write</r_w_flag>
						<register_address>0xA5</register_address>
						<values>
							<value>CC</value>
						</values>
						<delay>2</delay>
				</i2c_read_seq>
			  <i2c_read_seq id="21">
						<r_w_flag>write</r_w_flag>
						<register_address>0xA5</register_address>
						<values>
							<value>44</value>
						</values>
						<delay>200</delay>
			  </i2c_read_seq>
			  <i2c_read_seq id="22">
						<r_w_flag>write</r_w_flag>
						<register_address>0xB4</register_address>

						<delay>10</delay>
			  </i2c_read_seq>
			  <i2c_read_seq id="23">
						<r_w_flag>write</r_w_flag>
						<register_address>0xA5</register_address>
						<values>
							<value>55</value>
						</values>
						<delay>2</delay>
			  </i2c_read_seq>
				<!-- device address -->
			  <i2c_read_seq id="24">
						<r_w_flag>write</r_w_flag>
						<register_address>0xA5</register_address>
						<values>
							<value>28</value>
						</values>
						<delay>2</delay>
			  </i2c_read_seq>
			  <i2c_read_seq id="25">
						<r_w_flag>write</r_w_flag>
						<register_address>0xA5</register_address>
						<values>
							<value>61</value>
						</values>
						<delay>2</delay>
			  </i2c_read_seq>
			  <i2c_read_seq id="26">
						<r_w_flag>write</r_w_flag>
						<register_address>0xA5</register_address>
						<values>
							<value>9f</value>
						</values>
						<delay>2</delay>
			  </i2c_read_seq>
			  <i2c_read_seq id="27">
						<r_w_flag>write</r_w_flag>
						<register_address>0xA5</register_address>
						<values>
							<value>8f</value>
						</values>
						<delay>2</delay>
			  </i2c_read_seq>
			  <i2c_read_seq id="28">
						<r_w_flag>write</r_w_flag>
						<register_address>0xA5</register_address>
						<values>
							<value>7</value>
						</values>
						<delay>2</delay>
			  </i2c_read_seq>
			  <i2c_read_seq id="29">
						<r_w_flag>write</r_w_flag>
						<register_address>0xA5</register_address>
						<values>
							<value>0</value>
						</values>
						<delay>2</delay>
			  </i2c_read_seq>
			  <i2c_read_seq id="30">
						<r_w_flag>write</r_w_flag>
						<register_address>0xA5</register_address>
						<values>
							<value>0</value>
						</values>
						<delay>2</delay>
			  </i2c_read_seq>
			  <i2c_read_seq id="31">
						<r_w_flag>write</r_w_flag>
						<register_address>0xA5</register_address>
						<values>
							<value>0b</value>
						</values>
						<delay>2</delay>
			  </i2c_read_seq>
			  <!-- end of device address -->

			  <i2c_read_seq id="32">
						<r_w_flag>write</r_w_flag>
						<register_address>0xA5</register_address>
						<values>
							<value>BE</value>
						</values>
						<delay>10</delay>
			  </i2c_read_seq>
			  <i2c_read_seq id="33">
						<r_w_flag>write</r_w_flag>
						<register_address>0x96</register_address>
						<delay>10</delay>
			  </i2c_read_seq>
			  <i2c_read_seq id="34">
						<r_w_flag>write</r_w_flag>
						<register_address>0xE1</register_address>
						<values>
							<value>E1</value>
						</values>
						<delay>2</delay>
			  </i2c_read_seq>
			  <i2c_read_seq id="35">
				<r_w_flag>read</r_w_flag>
				<!--I2C register address-->
				<!-- <register_address>-1</register_address> -->
				<read_data_length>1</read_data_length>
				<response_data_mask>0xff</response_data_mask>

				<!--In milliseconds-->
				<delay>0</delay>
			  </i2c_read_seq>
			  <i2c_read_seq id="36">
						<r_w_flag>write</r_w_flag>
						<register_address>0x96</register_address>
						<delay>10</delay>
			  </i2c_read_seq>
			  <i2c_read_seq id="37">
						<r_w_flag>write</r_w_flag>
						<register_address>0xE1</register_address>
						<values>
							<value>E1</value>
						</values>
						<delay>2</delay>
			  </i2c_read_seq>
			  <i2c_read_seq id="38">
				<r_w_flag>read</r_w_flag>
				<!--I2C register address-->
				<!-- <register_address>-1</register_address> -->
				<read_data_length>1</read_data_length>
				<response_data_mask>0xff</response_data_mask>
				<!--In milliseconds-->
				<delay>0</delay>
			  </i2c_read_seq>
			  <i2c_read_seq id="39">
						<r_w_flag>write</r_w_flag>
						<register_address>0xB4</register_address>
						<delay>100</delay>
			  </i2c_read_seq>
            </read_data>
			</sensor>
			<sensor id="1620">
			<!--String description of the device, max 256 bytes-->
			<model>Local Port I2C Door Sensor</model>
			<!--Sensor type, "type" element must be one of the sensor types-->
			<type>Generic</type>
			<!--Sensor sub type, "gen_sensor_type" can be any string to identify actual sensor-->
			<gen_sensor_type>lid</gen_sensor_type>
			<!--I2C slave address-->
			<slave_address>0xC6</slave_address>
			<!--Timeout in seconds-->
			<response_timeout>0</response_timeout>
			<read_data>
			  <i2c_read_seq id="0">
				<r_w_flag>read</r_w_flag>
				<!--I2C register address-->
				<register_address>0x00</register_address>
				<!-- The lid sensor is on bit 0 so the mask is 0x01-->
				<response_data_mask>0x03</response_data_mask>
				<!--In milliseconds-->
				<delay>0</delay>
			  </i2c_read_seq>
			</read_data>
			</sensor>
			<sensor id="1621">
				<!--String description of the device, max 256 bytes-->
				<model>MAX1617 SMBus temperature sensor</model>
				<!--Sensor type, "type" element must be one of the sensor types-->
				<type>Generic</type>
				<!--Sensor sub type, "gen_sensor_type" can be any string to identify actual sensor-->
				<gen_sensor_type>Temperature</gen_sensor_type>
				<!--Not in use for I2C-->
				<port>0</port>
				<!--Not in use for I2C interface-->
				<unit>celsius</unit>
				<!--I2C slave address-->
				<slave_address>0x18</slave_address>
				<!--Timeout in seconds-->
				<response_timeout>5</response_timeout>
				<!--SMBus Alert Pin Number. Value : 1-26 motor control pins, less than 1 for polling -->
				<smbus_alert>6</smbus_alert>
				<!--Use Repeated Start condition. 0 - disable, 1 - enable-->
				<repeated_start>1</repeated_start>
				<!--a in linear equetion ax+b, x is reading from sensor-->
				<conversion_coefficient>1</conversion_coefficient>
				<!--b in linear equetion ax+b, x is reading from sensor-->
				<conversion_constant>0</conversion_constant>
				<initialization>
					<i2c_init_seq id="0">
						<r_w_flag>write</r_w_flag>
						<register_address>0x0b</register_address>
						<values>
							<value>0x16</value>
						</values>
						<delay>0</delay>
					</i2c_init_seq>
				</initialization>
				<read_data>
					<i2c_read_seq id="0">
						<r_w_flag>read</r_w_flag>
						<!--I2C register address-->
						<register_address>0x00</register_address>
						<response_data_mask>0xff</response_data_mask>
						<read_data_length>1</read_data_length>
						<!--In milliseconds-->
						<delay>0</delay>
					</i2c_read_seq>
				</read_data>
			</sensor>
			<sensor id="1622">
				<!--String description of the device-->
				<model>Local Port GPI Sensor I</model>
				<!--Sensor type, "type" element must be one of the sensor types-->
				<type>Generic</type>
				<!--Sensor sub type, "gen_sensor_type" can be any string to identify actual sensor-->
				<gen_sensor_type>GENGPIO</gen_sensor_type>
			</sensor>
			<sensor id="1623">
				<!--String description of the device-->
				<model>Local Port GPO Sensor I</model>
				<!--Sensor type, "type" element must be one of the sensor types-->
				<type>Generic</type>
				<!--Sensor sub type, "gen_sensor_type" can be any string to identify actual sensor-->
				<gen_sensor_type>GENGPIO</gen_sensor_type>
			</sensor>
			<sensor id="1625">
				<!--String description of the device-->
				<model>Groove Kit Potentiometer Galileo Gen2</model>
				<!--Sensor type, "type" element must be one of the sensor types-->
				<type>Generic</type>
				<!--Sensor sub type, "gen_sensor_type" can be any string to identify actual sensor-->
				<gen_sensor_type>Analog</gen_sensor_type>
				<!--Measurement unit-->
				<voltage_measurement_unit>V</voltage_measurement_unit>
			</sensor>
			<sensor id="1626">
				<!--String description of the device-->
				<model>Groove Kit Potentiometer Galileo Gen2</model>
				<!--Sensor type, "type" element must be one of the sensor types-->
				<type>Generic</type>
				<!--Sensor sub type, "gen_sensor_type" can be any string to identify actual sensor-->
				<gen_sensor_type>Analog</gen_sensor_type>
				<!--Measurement unit-->
				<voltage_measurement_unit>V</voltage_measurement_unit>
			</sensor>
			<sensor id="1627">
				<!--String description of the device-->
				<model>Groove Kit Potentiometer Galileo Gen2</model>
				<!--Sensor type, "type" element must be one of the sensor types-->
				<type>Generic</type>
				<!--Sensor sub type, "gen_sensor_type" can be any string to identify actual sensor-->
				<gen_sensor_type>Analog</gen_sensor_type>
				<!--Measurement unit-->
				<voltage_measurement_unit>V</voltage_measurement_unit>
			</sensor>
			<sensor id="1628">
				<!--String description of the device-->
				<model>Groove Kit Potentiometer Galileo Gen2</model>
				<!--Sensor type, "type" element must be one of the sensor types-->
				<type>Generic</type>
				<!--Sensor sub type, "gen_sensor_type" can be any string to identify actual sensor-->
				<gen_sensor_type>Analog</gen_sensor_type>
				<!--Measurement unit-->
				<voltage_measurement_unit>V</voltage_measurement_unit>
			</sensor>
			<sensor id="1629">
				<!--String description of the device, max 256 bytes-->
				<model>TC72-3.3MUA Local Port SPI Temperature sensor</model>
				<!--Sensor type, "type" element must be one of the sensor types-->
				<type>Generic</type>
				<!--Sensor sub type, "gen_sensor_type" can be any string to identify actual sensor-->
				<gen_sensor_type>Temperature</gen_sensor_type>
				<unit>celsius</unit>
				<!--Timeout in seconds-->
				<response_timeout>5</response_timeout>
				<!-- initialization sequence if required -->
				<initialization>
					<spi_init_seq id="0">
						<r_w_flag>write</r_w_flag>
						<read_data_length>0</read_data_length>
						<write>
							<write_data_length>2</write_data_length>
							<data_byte id="0">
								<value>0x80</value>
							</data_byte>
							<data_byte id="1">
								<value>0x04</value>
							</data_byte>
						</write>
						<delay>0</delay>
					</spi_init_seq>
				</initialization>
				<!-- Following sequence will be followed when User application call spSensorGetValueA Api -->
				<read_data>
					<spi_read_seq id="0">
						<r_w_flag>read</r_w_flag>
						<!-- no of bytes to be read from SPI interface -->
						<read_data_length>2</read_data_length>
						<!-- data to be written on SPI interface -->
						<write>
							<!-- no of bytes to be written on SPI interface -->
							<write_data_length>1</write_data_length>
							<!-- first data byte -->
							<data_byte id="0">
								<value>0x02</value>
							</data_byte>
						</write>
						<!-- delay in milliseconds between two calls -->
						<delay>0</delay>
					</spi_read_seq>
				</read_data>
				<!-- Following sequence will be followed when User application call spSensorSetValue(only device id as an argument) Api -->
				<write_data>
					<spi_write_seq id="0">
						<r_w_flag>write</r_w_flag>
						<!-- no of bytes to be read from SPI interface. It will not in use if r_w_flag is write -->
						<read_data_length>0</read_data_length>
						<write>
							<!-- no of bytes to be written on SPI interface -->
							<write_data_length>2</write_data_length>
							<!-- first data byte -->
							<data_byte id="0">
								<value>0x00</value>
							</data_byte>
							<!-- second data byte -->
							<data_byte id="1">
								<value>0x00</value>
							</data_byte>
						</write>
						<!-- delay in milliseconds between two calls -->
						<delay>0</delay>
					</spi_write_seq>
				</write_data>
			</sensor>
			<sensor id="1630">
				<!--String description of the device-->
				<model>Local Port PWM</model>
				<!--Sensor type, "type" element must be one of the sensor types-->
				<type>Fan Speed</type>
				<!--PWM port id-->
				<port>1</port>
				<!--Measurement unit-->
				<fan_speed_measurement_unit>rpm</fan_speed_measurement_unit>
				<!--Element indicating, tachometer is supported or not-->
				<tachometer_supported>0</tachometer_supported>
				<!--Tachometer factor-->
				<tachometer_factor>30</tachometer_factor>
				<!--Tachometer response timeout in Seconds-->
				<tach_resp_timeout>5</tach_resp_timeout>
				<!--PWM frequency-->
				<frequency>1500</frequency>
				<!--FAN maximum speed in RPM-->
				<max_speed>5000</max_speed>
			</sensor>
			<sensor id="1631">
				<!--String description of the device, max 256 bytes-->
				<model>MAX31730 SMBus temperature sensor</model>
				<!--Sensor type, "type" element must be one of the sensor types-->
				<type>Generic</type>
				<!--Sensor sub type, "gen_sensor_type" can be any string to identify actual sensor-->
				<gen_sensor_type>Temperature</gen_sensor_type>
				<!--Not in use for I2C-->
				<port>0</port>
				<!--Not in use for I2C interface-->
				<unit>celsius</unit>
				<!--I2C slave address-->
				<slave_address>0x1c</slave_address>
				<!--Timeout in seconds-->
				<response_timeout>5</response_timeout>
				<!--a in linear equetion ax+b, x is reading from sensor-->
				<conversion_coefficient>0.00390625</conversion_coefficient>
				<!--b in linear equetion ax+b, x is reading from sensor-->
				<conversion_constant>0</conversion_constant>
				<!--<initialization>
					<i2c_init_seq id="0">
						<r_w_flag>write</r_w_flag>
						<register_address>0x20</register_address>
						<values>
							<value>0x10</value>
						</values>
						<delay>0</delay>
					</i2c_init_seq>
				</initialization>-->
				<read_data>
					<i2c_read_seq id="0">
						<r_w_flag>read</r_w_flag>
						<!--I2C register address-->
						<register_address>0x00</register_address>
						<response_data_mask>0xff</response_data_mask>
						<read_data_length>1</read_data_length>
						<!--In milliseconds-->
						<delay>0</delay>
					</i2c_read_seq>
					<i2c_read_seq id="1">
						<r_w_flag>read</r_w_flag>
						<!--I2C register address-->
						<register_address>0x01</register_address>
						<response_data_mask>0xff</response_data_mask>
						<read_data_length>1</read_data_length>
						<!--In milliseconds-->
						<delay>0</delay>
					</i2c_read_seq>
				</read_data>
			</sensor>
		</sensors>

		<!--All the supported DEX devices and their configuration-->
		<dex_devices>
			<dex_device id="1700">
				<!--String description of the device, max 256 bytes-->
				<model>MC55 - Motorola MC55AO Series DEX</model>
				<!--10 Digit alpha-numeric communication ID of the DEX device-->
				<comm_id>1234567890</comm_id>
				<!--Revision level of DEX device, "revision_level" element must be one of the supported DEX revision-->
				<revision_level>R01L01</revision_level>
				<!--"baudrate" element must be one of the supported baudrates-->
				<baudrate>9600</baudrate>
				<!--Bus timeout in Seconds-->
				<bus_timeout>5</bus_timeout>
				<!--"parity" element must be one of the supported parity-->
				<parity>0</parity>
				<!--"stopbit" element must be one of the supported stop bit-->
				<stopbit>0</stopbit>
				<!--"databit" element must be one of the supported data bit-->
				<databit>8</databit>
			</dex_device>
		</dex_devices>
		<!--All the supported Motion Sensors and their configuration-->
		<motion_sensors>
			<motion_sensor id="1800">
				<!--String description of the device, max 256 bytes-->
				<model>Motion sensor I</model>
			</motion_sensor>
		</motion_sensors>
		<seven_segment_displays>
			<seven_segment_display id="1900">
				<model>Seven Segment Display</model>
			</seven_segment_display>
		</seven_segment_displays>
		<power_managers>
			<power_manager id="2000">
				<model>Power Manager</model>
			</power_manager>
		</power_managers>
		<cashless_payment_terminals>
			<cashless_payment_terminal id="2100">
				<model>Ingenico IUC-180B</model>
			</cashless_payment_terminal>
			<cashless_payment_terminal id="2101">
				<model>Secure Head MSR</model>
			</cashless_payment_terminal>
			<cashless_payment_terminal id="2102">
				<model>KIOSK-III Cashless Payment</model>
			</cashless_payment_terminal>
			<cashless_payment_terminal id="2103">
				<!--String description of the device, max 256 bytes-->
				<model>Ingenico IUC-280</model>
				<!--
				MDB device address of the device. In most cases it is equivalent to RESET command of that device. When user
				changed this address then he/she also have to change command codes under <command_code_deviations> tag.
				-->
				<port>0x10</port>
				<version>4.2</version>
				<feature_level>1</feature_level>
				<!--
				Element listing command/response deviation to read particular property from the device. Maximum value of the "response_data_size" is limited to 64 bits.
				Procedure to read and extract required information is,
				- Send MDB command specified by "cmd" element
				- From the response buffer, extract number of bytes specified by "response_data_size" element from the offset specified by "response_data_offset" element
				- Do the logical AND with the mask specified by "response_data_mask" element to extract the required data
				-->
				<feature_decode>
					<!-- Z1 = Configuration data - 1 byte -->
					<config_info_setup>
						<cmd>SETUP</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</config_info_setup>
					<!--Z2 = Reader Feature Level - 1 bytes -->
					<reader_feature_level_setup>
						<cmd>SETUP</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</reader_feature_level_setup>
					<!--Z3 - Z4 = Country / Currency Code - 2 bytes -->
					<country_currency_code_setup>
						<cmd>SETUP</cmd>
						<response_data_offset>2</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</country_currency_code_setup>
					<!-- Z5 = Scale Factor - 1 byte -->
					<scale_factor_setup>
						<cmd>SETUP</cmd>
						<response_data_offset>4</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</scale_factor_setup>
					<!-- Z6 = Decimal Places - 1 byte -->
					<decimal_places_setup>
						<cmd>SETUP</cmd>
						<response_data_offset>5</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</decimal_places_setup>
					<!-- Z7 = Application Maximum Response Time - seconds - 1 bytes -->
					<max_response_time_setup>
						<cmd>SETUP</cmd>
						<response_data_offset>6</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</max_response_time_setup>
					<!-- Z8  = Miscellaneous Options - 1 bytes -->
					<misc_options_setup>
						<cmd>SETUP</cmd>
						<response_data_offset>7</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</misc_options_setup>
					<just_reset>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</just_reset>
					<!-- Elements describing the information about reader config data response-->
					<!-- Z1 = Configuration data - 1 byte -->
					<config_info>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</config_info>
					<!--Z2 = Reader Feature Level - 1 bytes -->
					<feature_level>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</feature_level>
					<!--Z3 - Z4 = Country / Currency Code - 2 bytes -->
					<country_currency_code>
						<cmd>POLL</cmd>
						<response_data_offset>2</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</country_currency_code>
					<!-- Z5 = Scale Factor - 1 byte -->
					<scale_factor>
						<cmd>POLL</cmd>
						<response_data_offset>4</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</scale_factor>
					<!-- Z6 = Decimal Places - 1 byte -->
					<decimal_places>
						<cmd>POLL</cmd>
						<response_data_offset>5</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</decimal_places>
					<!-- Z7 = Application Maximum Response Time - seconds - 1 bytes -->
					<max_response_time>
						<cmd>POLL</cmd>
						<response_data_offset>6</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</max_response_time>
					<!-- Z8  = Miscellaneous Options - 1 bytes -->
					<misc_options>
						<cmd>POLL</cmd>
						<response_data_offset>7</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</misc_options>
					<!-- Elements describing the information about Begin Session-->
					<!-- Z1 = Begin Session - 1 byte -->
					<begin_session>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</begin_session>
					<!-- Z2 - Z3 = Funds Available - 2 byte -->
					<funds_available>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</funds_available>
					<!-- Elements describing the information about Session Cancel Request-->
					<!-- Z1 = Session Cancel Request - 1 byte -->
					<session_cancel_request>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</session_cancel_request>
					<!-- Elements describing the information about Vend Approved-->
					<!-- Z1 = Vend Approved - 1 byte -->
					<vend_approved_p>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</vend_approved_p>
					<!-- Z2 - Z3 = Vend Amount - 2 byte -->
					<vend_amount_p>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</vend_amount_p>
					<!-- Elements describing the information about Vend Denied-->
					<!-- Z1 = Vend Denied - 1 byte -->
					<vend_denied_p>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</vend_denied_p>
					<!-- Elements describing the information about End Session-->
					<!-- Z1 = End Session - 1 byte -->
					<end_session_p>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</end_session_p>	
					<!-- Elements describing the information about Cancelled-->
					<!-- Z1 = Cancelled - 1 byte -->
					<cancelled_p>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</cancelled_p>
					<!-- Elements describing the information about Peripheral ID-->
					<!-- Z1 = Peripheral ID - 1 byte -->
					<peripheral_id>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</peripheral_id>
					<!-- Z2 - Z4 = Manufacturer Code - 3 byte -->
					<manufacturer_code>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>3</response_data_size>
						<response_data_mask>0xFFFFFF</response_data_mask>
					</manufacturer_code>
					<!-- Z5 - Z16 = Serial Number - 12 byte -->
					<serial_number_01>
						<cmd>POLL</cmd>
						<response_data_offset>4</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</serial_number_01>	
					<serial_number_02>
						<cmd>POLL</cmd>
						<response_data_offset>5</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</serial_number_02>
					<serial_number_03>
						<cmd>POLL</cmd>
						<response_data_offset>6</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</serial_number_03>
					<serial_number_04>
						<cmd>POLL</cmd>
						<response_data_offset>7</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</serial_number_04>
					<serial_number_05>
						<cmd>POLL</cmd>
						<response_data_offset>8</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</serial_number_05>
					<serial_number_06>
						<cmd>POLL</cmd>
						<response_data_offset>9</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</serial_number_06>
					<serial_number_07>
						<cmd>POLL</cmd>
						<response_data_offset>10</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</serial_number_07>
					<serial_number_08>
						<cmd>POLL</cmd>
						<response_data_offset>11</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</serial_number_08>
					<serial_number_09>
						<cmd>POLL</cmd>
						<response_data_offset>12</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</serial_number_09>
					<serial_number_10>
						<cmd>POLL</cmd>
						<response_data_offset>13</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</serial_number_10>
					<serial_number_11>
						<cmd>POLL</cmd>
						<response_data_offset>14</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</serial_number_11>
					<serial_number_12>
						<cmd>POLL</cmd>
						<response_data_offset>15</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</serial_number_12>
					<!-- Z17 - Z28 = Model Number - 12 byte -->
					<model_number_01>
						<cmd>POLL</cmd>
						<response_data_offset>16</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</model_number_01>	
					<model_number_02>
						<cmd>POLL</cmd>
						<response_data_offset>17</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</model_number_02>
					<model_number_03>
						<cmd>POLL</cmd>
						<response_data_offset>18</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</model_number_03>
					<model_number_04>
						<cmd>POLL</cmd>
						<response_data_offset>19</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</model_number_04>
					<model_number_05>
						<cmd>POLL</cmd>
						<response_data_offset>20</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</model_number_05>
					<model_number_06>
						<cmd>POLL</cmd>
						<response_data_offset>21</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</model_number_06>
					<model_number_07>
						<cmd>POLL</cmd>
						<response_data_offset>22</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</model_number_07>
					<model_number_08>
						<cmd>POLL</cmd>
						<response_data_offset>23</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</model_number_08>
					<model_number_09>
						<cmd>POLL</cmd>
						<response_data_offset>24</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</model_number_09>
					<model_number_10>
						<cmd>POLL</cmd>
						<response_data_offset>25</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</model_number_10>
					<model_number_11>
						<cmd>POLL</cmd>
						<response_data_offset>26</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</model_number_11>
					<model_number_12>
						<cmd>POLL</cmd>
						<response_data_offset>27</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</model_number_12>
					<!-- Z29 - Z30 = Software Version - 2 byte -->
					<software_version>
						<cmd>POLL</cmd>
						<response_data_offset>28</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</software_version>
					<!-- Elements describing the information about Malfunction/Error-->
					<!-- Z1 = Malfunction / Error - 1 byte -->
					<error>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</error>
					<!-- Z2  = Error Code - 1 byte -->
					<error_code>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xF0</response_data_mask>
					</error_code>
					<manufacturer_defined_subcode>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</manufacturer_defined_subcode>
					<!-- Elements describing the information about Command Out Of Sequence-->
					<!-- Z1 = Command Out Of Sequence - 1 byte -->
					<command_out_seq>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</command_out_seq>
					<!-- Elements describing the information about Revalue Request-->
					<!-- Z1 = Revalue Request - 1 byte -->
					<revalue_request>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</revalue_request>
					<!-- Elements describing the information about Revalue Limit Request-->
					<!-- Z1 = Revalue Limit Request - 1 byte -->
					<revalue_limit_request>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</revalue_limit_request>
					<!-- Z2 = Revalue Limit Request - 1 byte -->
					<revalue_limit_request_1>
						<cmd>POLL</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</revalue_limit_request_1>
					<!-- Z3 = Revalue Limit Request - 1 byte -->
					<revalue_limit_request_2>
						<cmd>POLL</cmd>
						<response_data_offset>2</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</revalue_limit_request_2>
					<!-- Z1 = Vend Approved - 1 byte -->
					<vend_approved>
						<cmd>VEND</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</vend_approved>
					<!-- Z2 - Z3 = Vend Amount - 2 byte -->
					<vend_amount>
						<cmd>VEND</cmd>
						<response_data_offset>1</response_data_offset>
						<response_data_size>2</response_data_size>
						<response_data_mask>0xFFFF</response_data_mask>
					</vend_amount>
					<!-- Z1 = Vend Denied - 1 byte -->
					<vend_denied>
						<cmd>VEND</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</vend_denied>
					<!-- Z1 = End Session - 1 byte -->
					<end_session>
						<cmd>VEND</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</end_session>
					<!-- Z1 = Cancelled - 1 byte -->
					<cancelled>
						<cmd>READER</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0xFF</response_data_mask>
					</cancelled>
				</feature_decode>
				<!--
				Element listing MDB command code deviations
				"code" element specifies the actual command code. For some device specific commands(i.e. describded in device.s manual or MDB standard) 
				First five bits of this code and <port> tag must be same. Lets take an example of <reset_cmd> tag shown below. In that first five bits of 
				code matched with <port> tag.
				"request_data_size" element specifies request data size, expected by the device for particular command
				"response_data_size" element specifies the response data size, expected from the device for particular command
				-->
				<command_code_deviations>
					<reset_cmd>
						<code>0x10</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</reset_cmd>
					<setup_cmd>
						<code>0x11</code>
						<sub_code>0x00</sub_code>
						<request_data_size>5</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>8</response_data_size>
					</setup_cmd>
					<setup_price_cmd>
						<code>0x11</code>
						<sub_code>0x01</sub_code>
						<request_data_size>5</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</setup_price_cmd>
					<poll_cmd>
						<code>0x12</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>16</response_data_size>
					</poll_cmd>
					<vend_request_cmd>
						<code>0x13</code>
						<sub_code>0x00</sub_code>
						<request_data_size>5</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>3</response_data_size>
					</vend_request_cmd>
					<vend_cancel_cmd>
						<code>0x13</code>
						<sub_code>0x01</sub_code>
						<request_data_size>1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>1</response_data_size>
					</vend_cancel_cmd>			
					<vend_success_cmd>
						<code>0x13</code>
						<sub_code>0x02</sub_code>
						<request_data_size>3</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</vend_success_cmd>	
					<vend_failure_cmd>
						<code>0x13</code>
						<sub_code>0x03</sub_code>
						<request_data_size>1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</vend_failure_cmd>	
					<vend_session_complete_cmd>
						<code>0x13</code>
						<sub_code>0x04</sub_code>
						<request_data_size>1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>1</response_data_size>
					</vend_session_complete_cmd>
					<vend_cash_sale_cmd>
						<code>0x13</code>
						<sub_code>0x05</sub_code>
						<request_data_size>5</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</vend_cash_sale_cmd>
					<reader_disable_cmd>
						<code>0x14</code>
						<sub_code>0x00</sub_code>
						<request_data_size>1</request_data_size>
						<response_data_size>-1</response_data_size>
						<!-- 0xFF means NA -->
					</reader_disable_cmd>
					<reader_enable_cmd>
						<code>0x14</code>
						<sub_code>0x01</sub_code>
						<request_data_size>1</request_data_size>
						<response_data_size>-1</response_data_size>
						<!-- 0xFF means NA -->
					</reader_enable_cmd>
					<reader_cancel_cmd>
						<code>0x14</code>
						<sub_code>0x02</sub_code>
						<request_data_size>1</request_data_size>
						<response_data_size>1</response_data_size>
						<!-- 0xFF means NA -->
					</reader_cancel_cmd>
					<revalue_request_cmd>
						<code>0x15</code>
						<sub_code>0x00</sub_code>
						<request_data_size>3</request_data_size>
						<response_data_size>1</response_data_size>
						<!-- 0xFF means NA -->
					</revalue_request_cmd>
					<revalue_limit_request_cmd>
						<code>0x15</code>
						<sub_code>0x01</sub_code>
						<request_data_size>1</request_data_size>
						<response_data_size>3</response_data_size>
						<!-- 0xFF means NA -->
					</revalue_limit_request_cmd>
					<expansion_identification_cmd>
						<code>0x17</code>
						<sub_code>0x00</sub_code>
						<request_data_size>30</request_data_size>
						<response_data_size>30</response_data_size>
						<!-- 0xFF means NA -->
					</expansion_identification_cmd>
					<just_reset_cmd>
						<code>0x12</code>
						<request_data_size>-1</request_data_size>
						<!-- 0xFF means NA -->
						<response_data_size>-1</response_data_size>
					</just_reset_cmd>
				</command_code_deviations>
				<poll_response_type_identification>  
					<status>
						<cmd>POLL</cmd>
						<response_data_offset>0</response_data_offset>
						<response_data_size>1</response_data_size>
						<response_data_mask>0x0F</response_data_mask>
					</status>					
				</poll_response_type_identification>
				<!--
				POLL response status codes
				-->
				<poll_status_code>
					<just_reset>0</just_reset>
					<reader_config_data>1</reader_config_data>
					<display_request>2</display_request>
					<begin_session>3</begin_session>
					<session_cancel_req>4</session_cancel_req>
					<vend_approved>5</vend_approved>
					<vend_denied>6</vend_denied>
					<end_session>7</end_session>
					<cancelled>8</cancelled>
					<peripheral_id>9</peripheral_id>
					<malfunction_error>10</malfunction_error>
					<cmd_out_seq>11</cmd_out_seq>
					<revalue_approved>13</revalue_approved>
					<revalue_denied>14</revalue_denied>
					<revalue_limit_amount>15</revalue_limit_amount>
				</poll_status_code>
			</cashless_payment_terminal>
		</cashless_payment_terminals>
		<line_displays>
			<line_display id="2200">
				<model>Ingenico Line Display</model>
			</line_display>
		</line_displays>
		<billdispensers>
			<billdispenser id="2300">
				<!--String description of the device, max 256 bytes-->
				<model>ITL SMART Payout</model>
				<!--CCTALK device address of the device , any address from 2 to 255-->
				<port>0x28</port>
				<!-- 
				Algorithm used for frame validation. This element must have value from following options.
				CHK_8 - Normal 8-bit checksum validation.
				CRC_CCITT_16 - 16-bit CRC-CCITT checksum based on a polynomial of x^16+x^12+x^5+1
				CRC_ENCRYPT_16 - Encrypted 16-bit CRC checksum.
				-->
				<checksum_type>CHK_8</checksum_type>
				<!--Element listing all the supported device capabilities-->
				<capabilities>
					<cap_empty_sensor>1</cap_empty_sensor>
					<cap_near_empty_sensor>0</cap_near_empty_sensor>
					<cap_jam_sensor>0</cap_jam_sensor>
					<cap_adjust_cash_count>0</cap_adjust_cash_count>
					<cap_read_cash_count>0</cap_read_cash_count>
				</capabilities>
				<dispenser_type>ACCUMULATOR_HOPPER</dispenser_type>
				<!-- Element listing Supported coin values in cents. -->
				<coin_values>
					<coin_value id="0">
						<value>50</value>
					</coin_value>
				</coin_values>
			</billdispenser>
		</billdispensers>
	</devices>
</system>
